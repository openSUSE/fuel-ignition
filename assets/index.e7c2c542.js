var Fe=Object.defineProperty;var Ee=(e,i,n)=>i in e?Fe(e,i,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[i]=n;var G=(e,i,n)=>(Ee(e,typeof i!="symbol"?i+"":i,n),n);import{r as b,o as m,c as f,a as c,b as l,w as k,d as P,e as j,t as L,F as E,f as w,g as y,h as Pe,i as Ke,u as D,j as Se,B as ee,k as Ve,l as Ie,m as W,n as Ce,p as Me,q as Ue,s as Be,v as Oe,x as Ne,y as ze}from"./vendor.32f32c67.js";const Re=function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const a of t)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function n(t){const a={};return t.integrity&&(a.integrity=t.integrity),t.referrerpolicy&&(a.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?a.credentials="include":t.crossorigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function r(t){if(t.ep)return;t.ep=!0;const a=n(t);fetch(t.href,a)}};Re();var ve,be,u={GlobalStorage:(ve=class{},G(ve,"store",{addUsers:{amount:0}}),ve),PasswordHashes:(be=class{},G(be,"hashes",{}),be),parseJsonFile:async function(e){return new Promise((i,n)=>{const r=new FileReader;r.onload=t=>{try{return i(JSON.parse(t.target.result))}catch(a){return n(a)}},r.onerror=t=>n(t),r.readAsText(e)})},clearFile:function(){const e=document.querySelector(".formkit-remove-files");e!==void 0&&e.click()},saveTemplateAsFile:(e,i,n)=>{const r=new Blob(n?[i]:[JSON.stringify(i,null,2)],{type:"text/json"}),t=document.createElement("a");t.download=e,t.href=window.URL.createObjectURL(r),t.dataset.downloadurl=["text/json",t.download,t.href].join(":");const a=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0});t.dispatchEvent(a),t.remove()},copy:function(e){var i=document.createElement("textarea");i.innerHTML=e,document.body.appendChild(i),i.select();var n=document.execCommand("copy");return document.body.removeChild(i),n},setupFormComponentWatcher:(e,i,n)=>{e!==void 0&&"methods"in e&&"watchFormData"in e.methods&&i(n,async(r,t)=>{e.methods.watchFormData(r,t)})},isNumerical:e=>/^\d+$/.test(e),b64EncodeUnicode:e=>window.btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g,function(n,r){return String.fromCharCode("0x"+r)})),uid:()=>(performance.now().toString(36)+Math.random().toString(36)).replace(/\./g,""),getFormKey:(e,i,n)=>e+"_"+i+"_"+n,getFormValue:function(e,i,n,r){return i[this.getFormKey(e,n,r)]},generateTOTPSecret:function(){const e=new Uint32Array(5),i=[];return self.crypto.getRandomValues(e),e.map(n=>i.push(n.toString(16))),i.join("")},hexToUint8Array:function(e){for(var i=new Uint8Array(Math.ceil(e.length/2)),n=0;n<i.length;n++)i[n]=parseInt(e.substr(n*2,2),16);return i},normalizeZypperPackages:function(e){return e.split(/[ ,]/).filter(i=>i).join(" ")},setFormValue:function(e,i,n,r,t){i[this.getFormKey(e,n,r)]=t}},x=(e,i)=>{for(const[n,r]of i)e[n]=r;return e};const qe={},Le={class:"navbar navbar-expand-lg navbar-light fixed-top py-3",id:"mainNav"},He={class:"container px-4 px-lg-5"},Ge=P("Fuel Ignition \u{1F680}"),De=j('<button class="navbar-toggler navbar-toggler-right" type="button" data-bs-toggle="collapse" data-bs-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button><div class="collapse navbar-collapse" id="navbarResponsive"><ul class="navbar-nav ms-auto my-2 my-lg-0"><li class="nav-item"><a class="nav-link" href="#/">Start</a></li><li class="nav-item"><a class="nav-link" href="#about">About</a></li><li class="nav-item"><a class="nav-link" href="https://microos.opensuse.org/" target="_blank" rel="noopener noreferrer">MicroOS</a></li><li class="nav-item"><a class="nav-link" href="https://coreos.github.io/ignition/" target="_blank" rel="noopener noreferrer">Ignition Docs</a></li></ul></div>',2);function We(e,i){const n=b("router-link");return m(),f("nav",Le,[c("div",He,[l(n,{class:"navbar-brand",to:"/"},{default:k(()=>[Ge]),_:1}),De])])}var Je=x(qe,[["render",We]]);const Ye={},Xe={class:"page-section bg-primary",id:"about"},Ze=j('<div class="container px-4 px-lg-5"><div class="row gx-4 gx-lg-5 justify-content-center"><div class="col-lg-8 text-center"><h2 class="text-white mt-0">We&#39;ve got what you need!</h2><hr class="divider divider-light"><p class="text-white-75 mb-4">Looking for an easy way to write and edit Ignition configs? Look no further than Fuel Ignition! Our user-friendly web application makes it a breeze to create the config files you need. No strings attached!</p><a class="btn btn-light btn-xl" href="/fuel-ignition/edit">Get Started!</a></div></div></div>',1),Qe=[Ze];function je(e,i){return m(),f("section",Xe,Qe)}var et=x(Ye,[["render",je]]);const tt={class:"bg-light py-5"},nt={class:"container px-4 px-lg-5"},at={class:"small text-center text-muted"},it={setup(e){return(i,n)=>{const r=b("router-view");return m(),f(E,null,[l(Je),l(r),l(et),c("footer",tt,[c("div",nt,[c("div",at," Copyright \xA9 "+L(new Date().getFullYear())+" \u2013 built with \u{1F49A}, Vue, and openSUSE ",1)])])],64)}}},ot={},rt={class:"masthead"},st={class:"container px-4 px-lg-5 h-75"},lt={class:"row gx-4 gx-lg-5 h-100 align-items-center justify-content-center text-center"},ct=c("div",{class:"col-lg-8 align-self-end"},[c("h1",{class:"text-white font-weight-bold"},[P(" Ignition & Combustion "),c("br"),P("Config Generator ")]),c("hr",{class:"divider"})],-1),ut={class:"col-lg-8 align-self-baseline"},dt=c("p",{class:"text-white-75 mb-5"},[P(" Easily generate new or edit existing Ignition configs. "),c("br"),P("No more fiddling around with JSON or Butane. ")],-1),mt={class:"container-fluid"},pt={class:"row"},ft={class:"col-xs-6 mb-3"},_t=P("Create New Config"),ht={class:"col-xs-6"},gt=P("JSON to Ignition IMG");function yt(e,i){const n=b("router-link");return m(),f("header",rt,[c("div",st,[c("div",lt,[ct,c("div",ut,[dt,c("div",mt,[c("div",pt,[c("div",ft,[l(n,{class:"btn btn-primary btn-xl",to:"/edit"},{default:k(()=>[_t]),_:1})]),c("div",ht,[l(n,{class:"btn btn-primary btn-xl",to:"/convert"},{default:k(()=>[gt]),_:1})])])])])])])])}var vt=x(ot,[["render",yt]]),bt="/fuel-ignition/assets/undraw_programming_re_kg9v.a835d9b3.svg";const kt={style:{width:"100% !important"},class:"expandable-comp text-white"},At={key:0},wt={key:0,class:"mb-5"},xt=c("hr",{class:"divider"},null,-1),$t=[xt],Tt={class:"mt-1"},T={props:{displaysAtBegin:{type:Number,default:0},maxComponents:{type:Number,default:-1},title:String},setup(e){const i=e,n=w(i.displaysAtBegin);return(r,t)=>(m(),f("div",kt,[i.title!==void 0?(m(),f("h4",At,L(i.title),1)):y("",!0),(m(!0),f(E,null,Pe(n.value,a=>(m(),f("div",{key:a},[Ke(r.$slots,"default",{index:a}),a<n.value?(m(),f("div",wt,$t)):y("",!0)]))),128)),c("div",Tt,[e.maxComponents===-1||e.maxComponents!==-1&&e.maxComponents>n.value?(m(),f("button",{key:0,class:"btn btn-primary mr-5 mb-5",onClick:t[0]||(t[0]=a=>n.value++)}," \xA0\xA0\xA0Add\xA0\xA0\xA0 ")):y("",!0),n.value>=1?(m(),f("button",{key:1,class:"btn btn-danger ml-5 mr-5 mb-5",onClick:t[1]||(t[1]=a=>n.value>=1?n.value--:n.value)}," Remove ")):y("",!0)])]))}},Ft={key:0,class:"sk-folding-cube"},Et=c("div",{class:"sk-cube1 sk-cube"},null,-1),Pt=c("div",{class:"sk-cube2 sk-cube"},null,-1),Kt=c("div",{class:"sk-cube4 sk-cube"},null,-1),St=c("div",{class:"sk-cube3 sk-cube"},null,-1),Vt=[Et,Pt,Kt,St],ke={props:["ignJson","combustionScript"],setup(e){const i=e;var n=w(!1);const r=new Ae,t=async function(){a();try{let o=await r.convertToImage(i.ignJson,i.combustionScript);r.downloadImageFile(o)}catch(o){alert(o)}a()},a=function(){document.querySelector("#loadingToggle").click()};return(o,s)=>(m(),f(E,null,[c("button",{class:"btn btn-primary mb-4",style:{width:"100%"},onClick:s[0]||(s[0]=_=>t())}," Convert and Download "),D(n)?(m(),f("div",Ft,Vt)):y("",!0),c("button",{id:"loadingToggle",hidden:"",onClick:s[1]||(s[1]=_=>Se(n)?n.value=!D(n):n=!D(n))})],64))}};class Ae{constructor(){G(this,"images",{zero:{ignFatDirEntry:61536,ignFileOffset:86016},combustion:{ignFatDirEntry:61632,combFatDirEntry:63680,ignFileOffset:15796224,combFileOffset:3244032}});G(this,"alphabet",["Alfa","Bravo","Charlie","Delta","Echo","Foxtrot","Golf","Hotel","India","Juliett","Kilo","Lima","Mike","November","Oscar","Papa","Quebec","Romeo","Sierra","Tango","Uniform","Victor","Whisky","X-ray","Yankee","Zulu","Nico","Ignaz","Robert","Moritz"]);String.prototype.replaceAt=function(i,n){return this.substring(0,i)+n+this.substring(i+n.length)},String.prototype.hexEncode=function(){var i,n,r="";for(n=0;n<this.length;n++)i=this.charCodeAt(n).toString(16),r+=("000"+i).slice(-4);return r}}bufferToHex(i){return[...new Uint8Array(i)].map(n=>n.toString(16).padStart(2,"0")).join("")}strToHex(i){for(var n="",r=0;r<i.length;r++)n+=i.charCodeAt(r).toString(16);return n}async fetchImage(i){return fetch("templates/ignition-"+i+"-template.img").then(n=>n.arrayBuffer())}async convertToImage(i,n){let r=JSON.stringify(i,null,2),t=n===void 0?"zero":"combustion",a=n!==void 0;console.log("images["+t+"] :>> ",this.images[t]);let o=await this.fetchImage(t),s=new DataView(o),_=this.images[t].ignFatDirEntry,p=new DataView(o,_+28,4),A=new TextEncoder,v=A.encode(r),F=p.getInt32(0,!0);if(p.setInt32(0,v.length,!0),v.length>=F)throw new Error(`Warning!

Ignition configuration is too large.

The maximum file size for the Ignition configuration is currently set to `+F+"B.");for(let d=0;d<v.length;d++)s.setInt8(this.images[t].ignFileOffset+d,v[d]);if(console.log("jsonSize(string): "+r.length),console.log("jsonSize(bin): "+v.length),console.log("dirEntry :>> ",_),console.log("images["+t+"] :>> ",this.images[t]),a){let d=this.images[t].combFatDirEntry;p=new DataView(o,d+28,4);let g=A.encode(n),$=p.getInt32(0,!0);if(p.setInt32(0,g.length,!0),g.length>=$)throw new Error(`Warning!

Combustion configuration is too large.

The maximum file size for the Combustion configuration is currently set to `+$+"B.");for(let S=0;S<g.length;S++)s.setInt8(this.images[t].combFileOffset+S,g[S])}var h=new Uint8Array(o);return new Blob([h],{type:"application/octet-stream"})}downloadImageFile(i){var n=window.document.createElement("a");n.href=window.URL.createObjectURL(i),n.download="ignition-"+this.alphabet[Math.floor(Math.random()*this.alphabet.length)].toLowerCase()+".img",document.body.appendChild(n),n.click(),document.body.removeChild(n)}}const K="user",It={props:["index"],setup:()=>{const e=u.uid(),i=w(!1),n=w("root"),r=w(u.generateTOTPSecret());return{uid:e,totpEnabled:i,name:n,secret:r,Utils:u,formKey:t=>u.getFormKey(K,t,e)}},methods:{encodeToInstallation:function(e,i){const n=(t,a)=>u.getFormValue(K,i,t,a),r=K+"_name_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{if(e.passwd="passwd"in e?e.passwd:{users:[]},n("name",t)!=="root"&&(u.GlobalStorage.store.addUsers.onlyUsernameRoot=!1),n("runs_on_suse",t)===!0&&(e.storage===void 0&&(e.storage={}),e.storage.filesystems===void 0&&(e.storage.filesystems=[]),e.storage.filesystems.push({device:"/dev/disk/by-label/ROOT",format:"btrfs",mountOptions:["subvol=/@/home"],path:"/home",wipeFilesystem:!1})),n("totp_enabled",t)){e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);const a=encodeURIComponent("HOTP/T30/6 "+n("name",t)+" - "+n("totp_secret",t));let o;n("name",t)==="root"?o="/root/.pam_oath_usersfile":o="/home/"+n("name",t)+"/.pam_oath_usersfile",e.storage.files.push({overwrite:!0,path:o,contents:{source:"data:,"+a},user:{name:n("name",t)},group:{name:n("name",t)},mode:384})}if(e.passwd.users!==void 0){const a=n("ssh_keys",t),o=a!==void 0&&a.includes(",")?a.replaceAll(" ","").split(","):[a],s=n("passwd",t)===""||n("passwd",t)===void 0;e.passwd.users.push({name:n("name",t),passwordHash:s?void 0:u.PasswordHashes.hashes[t],sshAuthorizedKeys:a===void 0||a===""?void 0:o})}})},watchFormData:async function(e,i){const n=(r,t)=>e[u.getFormKey(K,r,t)];Object.keys(e).filter(r=>r.includes("totp_enabled")).map(r=>r.replace("user_totp_enabled_","")).forEach(async r=>{const t=n("name",r),a=document.getElementById("user_qrcode_"+r),o=n("totp_secret",r);t&&a&&o&&this.renderQRCode(o,t,a)}),Object.keys(e).filter(r=>r.includes("user_passwd")&&!r.includes("hashed")).map(r=>r.replace("user_passwd_","")).forEach(async r=>{const t=n("passwd",r),a=n("hash_type",r),o=t===""||t===void 0,s=e["user_passwd_"+r]===i["user_passwd_"+r];o||s||Ct(t,a).then(_=>u.PasswordHashes.hashes[r]=_)})},encodeToExport:function(e,i){const n=(t,a)=>u.getFormValue(K,i,t,a),r=K+"_name_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.login===void 0&&(e.login={}),e.login.users===void 0&&(e.login.users=[]);let a={};a.name=n("name",t),a.hash_type=n("hash_type",t),a.passwd=n("passwd",t),a.ssh_keys=n("ssh_keys",t),a.runs_on_suse=n("runs_on_suse",t),a.totp_enabled=n("totp_enabled",t),n("totp_enabled",t)&&(a.totp_secret=n("totp_secret",t)),e.login.users.push(a)})},fillImport:function(e,i){const n=(t,a,o)=>u.setFormValue(K,i,t,a,o),r=K+"_name_";e.login==null||e.login.users==null||Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{let a=e.login.users.shift();n("name",t,a.name),n("hash_type",t,a.hash_type),a.passwd&&(n("passwd",t,a.passwd),u.PasswordHashes.hashes[t]=ee.hashSync(a.passwd,8)),n("ssh_keys",t,a.ssh_keys),n("runs_on_suse",t,a.runs_on_suse),n("totp_enabled",t,a.totp_enabled),n("totp_secret",t,a.totp_secret)})},countImport:function(e){return e.login!=null&&e.login.users!=null?e.login.users.length:0},totpSecretToBase32:function(e){const i=u.hexToUint8Array(e);return Ve(i,"RFC4648",{padding:!1})},readableTOTPSecret:function(e){return(this.totpSecretToBase32(e).match(/.{1,4}/g)||[]).join(" ")},renderQRCode:function(e,i,n){const r=this.totpSecretToBase32(e);Ie.toCanvas(n,"otpauth://totp/"+i+"?secret="+r+"&issuer=Fuel%20Ignition",function(t){t&&alert(t)})}}};async function Ct(e,i){if(i==="Hash Yourself")return e;var n=await ee.genSalt(10).then();return ee.hash(e,n)}const Mt={class:"users"},Ut={key:0},Bt=["id"],Ot={key:1};function Nt(e,i,n,r,t,a){const o=b("FormKit");return m(),f("div",Mt,[l(o,{class:"form-control",name:e.formKey("name"),label:"Username (required)",placeholder:"write your os username here",validation:"required","validation-behavior":"live",value:"root",help:"A new user will be created, if it does not exist.",modelValue:e.name,"onUpdate:modelValue":i[0]||(i[0]=s=>e.name=s)},null,8,["name","modelValue"]),l(o,{name:e.formKey("hash_type"),label:"Password Hash Type",placeholder:"bcrypt",type:"select",validation:"optional","validation-behavior":"live",value:"bcrypt",options:["bcrypt","Hash Yourself"],help:"The way you want your password to be hashed."},null,8,["name"]),l(o,{name:e.formKey("passwd"),label:"Password",placeholder:"write the corresponding password here",type:"password",validation:"optional","validation-behavior":"live",help:"Your password is never sent over the internet, everything is local."},null,8,["name"]),l(o,{name:e.formKey("ssh_keys"),label:"SSH Public Keys",placeholder:"write the corresponding ssh keys here, separated by commas, spaces are ignored",type:"textarea",validation:"optional","validation-behavior":"live",help:"Your keys are never sent over the internet, everything is local."},null,8,["name"]),l(o,{name:e.formKey("totp_enabled"),label:"Generate Time-based one-time password (TOTP) Secret",type:"checkbox",validation:"required","validation-behavior":"live ",help:"Enabling Two-Factor Authentication (2FA) via an app based authenticator. This is for use with Cockpit on SUSE related systems. Please note Cockpit disallows root login by default.",modelValue:e.totpEnabled,"onUpdate:modelValue":i[1]||(i[1]=s=>e.totpEnabled=s)},null,8,["name","modelValue"]),e.totpEnabled===!0?(m(),f("div",Ut,[l(o,{name:e.formKey("totp_secret"),type:"text",label:"Time-based one-time password (TOTP) Secret",help:`Your secret (written to file /${(e.name==="root"?"":"home/")+e.name}/.pam_oath_usersfile) is never sent over the internet. The following QR-Code defines how the app generates the code:`,modelValue:e.secret,"onUpdate:modelValue":i[2]||(i[2]=s=>e.secret=s)},null,8,["name","help","modelValue"]),c("canvas",{id:e.formKey("qrcode")},null,8,Bt),c("p",null,L(a.readableTOTPSecret(e.secret)),1)])):y("",!0),n.index===1?(m(),f("div",Ot,[l(o,{name:e.formKey("runs_on_suse"),label:"Mount /home",validation:"required",type:"checkbox","validation-behavior":"live",help:"Required on SUSE related systems for creating users not named root. Otherwise, applying the Ignition config will fail"},null,8,["name"])])):y("",!0)])}var te=x(It,[["render",Nt]]);const V="create_file",zt={setup:()=>{const e=u.uid();return{sourceType:w("data"),formKey:n=>u.getFormKey(V,n,e)}},methods:{encodeToInstallation:function(e,i){const n=(t,a)=>u.getFormValue(V,i,t,a),r=V+"_path_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace("create_file_path_","")).forEach(t=>{e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);let a,o={};switch(n("source_type",t)){case"data":let p=n("data_content",t);a="data:text/plain;charset=utf-8;base64,"+u.b64EncodeUnicode(p===void 0?"":p);break;case"data-vagrant":let A=n("data_vagrant_content",t);a="data:,"+encodeURIComponent(A===void 0?"":A);break;case"https":a=n("https_content",t);break;case"http":a=n("http_content",t);let v=n("http_verification",t);v&&(o.verification={hash:v});break;case"tftp":case"s3":case"gs":a=n("tftp_s3_gs_content",t);break}const s=n("user",t),_=n("group",t);e.storage.files.push(Object.assign({path:n("path",t),mode:parseInt(n("mode",t)),overwrite:n("overwrite",t),user:u.isNumerical(s)?{id:parseInt(s)}:{name:s},group:u.isNumerical(_)?{id:parseInt(_)}:{name:_},contents:{source:a}},o))})},encodeToExport:function(e,i){const n=(t,a)=>u.getFormValue(V,i,t,a),r=V+"_path_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);let a={};switch(a.source_type=n("source_type",t),a.source_type){case"data":a.data_content=n("data_content",t);break;case"data-vagrant":a.data_vagrant_content=n("data_vagrant_content",t);case"https":a.https_content=n("https_content",t);break;case"http":a.http_content=n("http_content",t),a.http_verification=n("http_verification",t);break;case"tftp":case"s3":case"gs":a.tftp_s3_gs_content=n("tftp_s3_gs_content",t);break}a.path=n("path",t),a.mode=n("mode",t);const o=n("user",t),s=n("group",t);a.user=o,a.group=s,a.overwrite=n("overwrite",t),e.storage.files.push(a)})},fillImport:function(e,i){const n=(t,a,o)=>u.setFormValue(V,i,t,a,o),r=V+"_path_";e.storage==null||e.storage.files==null||Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{let a=e.storage.files.shift();switch(n("source_type",t,a.source_type),a.source_type){case"data":n("data_content",t,a.data_content);break;case"data-vagrant":n("data_vagrant_content",t,a.data_vagrant_content);case"https":n("https_content",t,a.https_content);break;case"http":n("http_content",t,a.http_content),n("http_verification",t,a.http_verification);break;case"tftp":case"s3":case"gs":n("tftp_s3_gs_content",t,a.tftp_s3_gs_content);break}n("path",t,a.path),n("mode",t,a.mode),n("user",t,a.user),n("group",t,a.group),n("overwrite",t,a.overwrite)})},countImport:function(e){return e.storage!=null&&e.storage.files!=null?e.storage.files.length:0}}},Rt={class:"createfiles"},qt={class:"source"},Lt={key:0,class:"data"},Ht={key:1,class:"data-vagrant"},Gt={key:2,class:"https"},Dt={key:3,class:"http"},Wt={key:4,class:"tftp-s3-gs"};function Jt(e,i,n,r,t,a){const o=b("FormKit");return m(),f("div",Rt,[l(o,{name:e.formKey("path"),label:"File Path (required)",placeholder:"path on the filesystem",validation:"required","validation-behavior":"live",value:"/etc/someconfig",help:"The absolute path to the file"},null,8,["name"]),l(o,{name:e.formKey("overwrite"),label:"Overwrite",placeholder:"path on the filesystem",validation:"required",type:"checkbox","validation-behavior":"live",help:"Whether to delete preexisting nodes at the path"},null,8,["name"]),l(o,{name:e.formKey("mode"),label:"File Mode (required)",type:"number",value:"420",validation:"required","validation-behavior":"live",help:"The file's permission mode. Note that the mode must be properly specified as a decimal value (i.e. 0644 -> 420)."},null,8,["name"]),l(o,{name:e.formKey("user"),label:"User (required)",value:"root",validation:"required","validation-behavior":"live",help:"The file's assigned user. This can either be an ID or the users name"},null,8,["name"]),l(o,{name:e.formKey("group"),label:"Group (required)",value:"root",validation:"required","validation-behavior":"live",help:"The file's assigned group. This can either be an ID or the groups name"},null,8,["name"]),c("div",qt,[l(o,{type:"select",name:e.formKey("source_type"),modelValue:e.sourceType,"onUpdate:modelValue":i[0]||(i[0]=s=>e.sourceType=s),label:"Scheme for file contents url (use data for plain text)",help:"If source is omitted and a regular file already exists at the path, Ignition will do nothing. If source is omitted and no file exists, an empty file will be created.",options:["data","data-vagrant","https","http","tftp","s3","gs","omit"]},null,8,["name","modelValue"])]),e.sourceType==="data"?(m(),f("div",Lt,[l(o,{name:e.formKey("data_content"),label:"File Content Data (required)",placeholder:"write the file content here, spaces, newlines etc. are preserved",type:"textarea",validation:"required","validation-behavior":"live",help:"Leaving this empty will create an empty file"},null,8,["name"])])):y("",!0),e.sourceType==="data-vagrant"?(m(),f("div",Ht,[l(o,{name:e.formKey("data_vagrant_content"),label:"File Content Data (required)",placeholder:"write the file content here, spaces, newlines etc. are preserved",type:"textarea",validation:"required","validation-behavior":"live",help:"Leaving this empty will create an empty file"},null,8,["name"])])):y("",!0),e.sourceType==="https"?(m(),f("div",Gt,[l(o,{name:e.formKey("https_content"),label:"HTTPS Url (required)",placeholder:"the URL of the file contents",type:"text",validation:"required|url","validation-behavior":"live"},null,8,["name"])])):y("",!0),e.sourceType==="http"?(m(),f("div",Dt,[l(o,{name:e.formKey("http_content"),label:"HTTP Url (required)",placeholder:"the URL of the file contents",type:"text",validation:"required|url","validation-behavior":"live"},null,8,["name"]),l(o,{name:e.formKey("http_verification"),label:"Verification Hash (optional)",placeholder:"e.g. sha512-012345678..",type:"text",validation:"optional","validation-behavior":"live",help:"The hash of the contents, in the form <type>-<value> where type is either sha512 or sha256."},null,8,["name"])])):y("",!0),!e.sourceType.includes("http")&&e.sourceType!=="data"&&e.sourceType!=="data-vagrant"&&e.sourceType!=="omit"?(m(),f("div",Wt,[l(o,{name:e.formKey("tftp_s3_gs_content"),label:e.sourceType.toUpperCase()+" Url (required)",placeholder:"the URL of the file contents",type:"text",validation:"required","validation-behavior":"live"},null,8,["name","label"])])):y("",!0)])}var ne=x(zt,[["render",Jt]]);const I="add_hostname",Yt={setup:()=>{const e=u.uid();return{formKey:i=>u.getFormKey(I,i,e)}},methods:{encodeToInstallation:function(e,i){const n=(t,a)=>u.getFormValue(I,i,t,a),r=I+"_hostname_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);let a=n("hostname",t),o="data:,"+(a===void 0?"":a);e.storage.files.push({path:"/etc/hostname",mode:420,overwrite:!0,contents:{source:o}})})},encodeToExport:function(e,i){const n=(t,a)=>u.getFormValue(I,i,t,a),r=I+"_hostname_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{let a=n("hostname",t);e.hostname=a===void 0?"":a})},fillImport:function(e,i){const n=(t,a,o)=>u.setFormValue(I,i,t,a,o),r=I+"_hostname_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.hostname!=null&&(n("hostname",t,e.hostname),e.hostname=void 0)})},countImport:function(e){return e.hostname!=null?1:0}}};function Xt(e,i,n,r,t,a){const o=b("FormKit");return m(),W(o,{name:e.formKey("hostname"),label:"Hostname",validation:"required","validation-behavior":"live",help:"Leaving this empty will create an empty file"},null,8,["name"])}var ae=x(Yt,[["render",Xt]]);const we=new Map([["Arabic","arabic"],["Belgian","be"],["Croatian","hr"],["Canadian (CSA)","ca-multix"],["Chinese Traditional","tw"],["Chinese Simplified","cn"],["Czech","cz"],["Czech (qwerty)","cz-qwerty"],["Danish","dk"],["Dutch","nl"],["Dvorak","us-dvorak"],["Dvorak (programmer)","us-dvp"],["English (US)","us"],["English (UK)","gb"],["Estonian","ee"],["Finnish","fi-kotoistus"],["French","fr"],["French (Canada)","ca"],["French (Switzerland)","ch-fr"],["German","de-nodeadkeys"],["German (with deadkeys)","de"],["German (Switzerland)","sg-latin1"],["Greek","gr"],["Hungarian","hu"],["Icelandic","is"],["Italian","it"],["Japanese","jp"],["Khmer","khmer"],["Korean","kr"],["Lithuanian","lt"],["Norwegian","no"],["Persian","ir"],["Polish","pl"],["Portuguese","pt"],["Portuguese (Brazil)","br"],["Portuguese (Brazil -- US accents)","us-acentos"],["Romanian","ro"],["Russian","ru"],["Serbian","rs-latin"],["Slovak","sk"],["Slovak (qwerty)","sk-qwerty"],["Slovene","si"],["Spanish","es"],["Spanish (Asturian variant)","es-ast"],["Spanish (Latin America)","latam"],["Swedish","se"],["Tajik","tj_alt-UTF8"],["Turkish","tr"],["Ukrainian","ua-utf"],["US International","us-intl"]]),J=new Map([["Afrikaans",new Map([["lang_code","af_ZA"],["utf8",".UTF-8"],["none_utf8",""]])],["Arabic",new Map([["lang_code","ar_EG"],["utf8",".UTF-8"],["none_utf8",""]])],["Asturian",new Map([["lang_code","ast_ES"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Bengali",new Map([["lang_code","bn_BD"],["utf8",".UTF-8"],["none_utf8",""]])],["Bosnian",new Map([["lang_code","bs_BA"],["utf8",".UTF-8"],["none_utf8",""]])],["Bulgarian",new Map([["lang_code","bg_BG"],["utf8",".UTF-8"],["none_utf8",""]])],["Catalan",new Map([["lang_code","ca_ES"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Chinese Simplified",new Map([["lang_code","zh_CN"],["utf8",".UTF-8"],["none_utf8",""]])],["Chinese Traditional",new Map([["lang_code","zh_TW"],["utf8",".UTF-8"],["none_utf8",""]])],["Croatian",new Map([["lang_code","hr_HR"],["utf8",".UTF-8"],["none_utf8",""]])],["Czech",new Map([["lang_code","cs_CZ"],["utf8",".UTF-8"],["none_utf8",""]])],["Danish",new Map([["lang_code","da_DK"],["utf8",".UTF-8"],["none_utf8",""]])],["Dutch",new Map([["lang_code","nl_NL"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["English (UK)",new Map([["lang_code","en_GB"],["utf8",".UTF-8"],["none_utf8",""]])],["English (US)",new Map([["lang_code","en_US"],["utf8",".UTF-8"],["none_utf8",""]])],["Estonian",new Map([["lang_code","et_EE"],["utf8",".UTF-8"],["none_utf8",""]])],["Finnish",new Map([["lang_code","fi_FI"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["French",new Map([["lang_code","fr_FR"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Galician",new Map([["lang_code","gl_ES"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Georgian",new Map([["lang_code","ka_GE"],["utf8",".UTF-8"],["none_utf8",""]])],["German",new Map([["lang_code","de_DE"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Greek",new Map([["lang_code","el_GR"],["utf8",".UTF-8"],["none_utf8",".ISO-8859-7"]])],["Gujarati",new Map([["lang_code","gu_IN"],["utf8",".UTF-8"],["none_utf8",""]])],["Hebrew",new Map([["lang_code","he_IL"],["utf8",".UTF-8"],["none_utf8",""]])],["Hindi",new Map([["lang_code","hi_IN"],["utf8",".UTF-8"],["none_utf8",""]])],["Hungarian",new Map([["lang_code","hu_HU"],["utf8",".UTF-8"],["none_utf8",""]])],["Indonesian",new Map([["lang_code","id_ID"],["utf8",".UTF-8"],["none_utf8",""]])],["Italian",new Map([["lang_code","it_IT"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Japanese",new Map([["lang_code","ja_JP"],["utf8",".UTF-8"],["none_utf8",".eucJP"]])],["Khmer",new Map([["lang_code","km_KH"],["utf8",".UTF-8"],["none_utf8",""]])],["Korean",new Map([["lang_code","ko_KR"],["utf8",".UTF-8"],["none_utf8",""]])],["Lithuanian",new Map([["lang_code","lt_LT"],["utf8",".UTF-8"],["none_utf8",""]])],["Macedonian",new Map([["lang_code","mk_MK"],["utf8",".UTF-8"],["none_utf8",""]])],["Marathi",new Map([["lang_code",""],["utf8",".UTF-8"],["none_utf8",""]])],["Norwegian",new Map([["lang_code","nb_NO"],["utf8",".UTF-8"],["none_utf8",""]])],["Nynorsk",new Map([["lang_code","nn_NO"],["utf8",".UTF-8"],["none_utf8",""]])],["Persian",new Map([["lang_code","fa_IR"],["utf8",".UTF-8"],["none_utf8",""]])],["Polish",new Map([["lang_code","pl_PL"],["utf8",".UTF-8"],["none_utf8",""]])],["Portuguese (Br)",new Map([["lang_code","pt_BR"],["utf8",".UTF-8"],["none_utf8",""]])],["Portuguese",new Map([["lang_code","pt_PT"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Punjabi",new Map([["lang_code","pa_IN"],["utf8",".UTF-8"],["none_utf8",""]])],["Romanian",new Map([["lang_code","ro_RO"],["utf8",".UTF-8"],["none_utf8",""]])],["Russian",new Map([["lang_code","ru_RU"],["utf8",".UTF-8"],["none_utf8",""]])],["Serbian",new Map([["lang_code","sr_RS"],["utf8",".UTF-8"],["none_utf8",""]])],["Sinhala",new Map([["lang_code","si_LK"],["utf8",".UTF-8"],["none_utf8",""]])],["Slovak",new Map([["lang_code","sk_SK"],["utf8",".UTF-8"],["none_utf8",""]])],["Slovenian",new Map([["lang_code","sl_SI"],["utf8",".UTF-8"],["none_utf8",""]])],["Spanish",new Map([["lang_code","es_ES"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Swedish",new Map([["lang_code","sv_SE"],["utf8",".UTF-8"],["none_utf8",""]])],["Tajik",new Map([["lang_code","tg_TJ"],["utf8",".UTF-8"],["none_utf8",""]])],["Tamil",new Map([["lang_code","ta_IN"],["utf8",".UTF-8"],["none_utf8",""]])],["Thai",new Map([["lang_code","th_TH"],["utf8",".UTF-8"],["none_utf8",""]])],["Turkish",new Map([["lang_code","tr_TR"],["utf8",".UTF-8"],["none_utf8",""]])],["Ukrainian",new Map([["lang_code","uk_UA"],["utf8",".UTF-8"],["none_utf8",""]])],["Vietnamese",new Map([["lang_code","vi_VN"],["utf8",".UTF-8"],["none_utf8",""]])],["Walloon",new Map([["lang_code","wa_BE"],["utf8",".UTF-8"],["none_utf8","@euro"]])],["Welsh",new Map([["lang_code","cy_GB"],["utf8",".UTF-8"],["none_utf8",""]])],["Xhosa",new Map([["lang_code","xh_ZA"],["utf8",".UTF-8"],["none_utf8",""]])],["Zulu",new Map([["lang_code","zu_ZA"],["utf8",".UTF-8"],["none_utf8",""]])]]);var H={availableLanguages:()=>Array.from(J.entries()).map(e=>e[0]),langCode:e=>J.get(e).get("lang_code"),utf8Encoding:e=>J.get(e).get("utf8"),noneUtf8Encoding:e=>J.get(e).get("none_utf8"),availableKeyboards:()=>Array.from(we.entries()).map(e=>e[0]),keyboardCode:e=>we.get(e)};const C="add_language",Zt={setup:()=>{const e=u.uid();return{formKey:i=>u.getFormKey(C,i,e),languages:()=>H.availableLanguages()}},methods:{encodeToInstallation:function(e,i){const n=(t,a)=>u.getFormValue(C,i,t,a),r=C+"_language_name_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{const a=n("language_utf8",t),o=n("language_name",t);e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);let s=H.langCode(o);a===!0?s=s+H.utf8Encoding(o):s=s+H.noneUtf8Encoding(o);let _="LANG="+s+`
`;e.storage.files.push({path:"/etc/locale.conf",mode:420,overwrite:!0,contents:{source:"data:text/plain;charset=utf-8;base64,"+u.b64EncodeUnicode(_),human_read:_}})})},encodeToExport:function(e,i){const n=(t,a)=>u.getFormValue(C,i,t,a),r=C+"_language_name_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.language_name=n("language_name",t),e.language_utf8=n("language_utf8",t)})},fillImport:function(e,i){const n=(t,a,o)=>u.setFormValue(C,i,t,a,o),r=C+"_language_name_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.language_name!=null&&(n("language_name",t,e.language_name),e.language_name=void 0),e.language_utf8!=null&&n("language_utf8",t,e.language_utf8)})},countImport:function(e){return e.language_name!=null?1:0}}};function Qt(e,i,n,r,t,a){const o=b("FormKit");return m(),f(E,null,[l(o,{type:"select",name:e.formKey("language_name"),label:"Language",validation:"required","validation-behavior":"live",options:e.languages(),help:"select primary language"},null,8,["name","options"]),l(o,{name:e.formKey("language_utf8"),label:"Use UTF-8 Encoding",type:"checkbox","validation-behavior":"live",value:!0,help:"enable UTF8-Code"},null,8,["name"])],64)}var ie=x(Zt,[["render",Qt]]);const M="add_network",jt={setup:()=>{const e=u.uid(),i=w("DHCP"),n=w("DHCP"),r=w(!1),t=w(!0),a=w(!0),o=w("WPA & WPA2 Personal");return{ipv4enabled:t,ipv4networkType:i,ipv6enabled:a,ipv6networkType:n,wifienabled:r,keymgmt:o,formKey:s=>u.getFormKey(M,s,e)}},methods:{encodeToInstallation:function(e,i){const n=(a,o)=>u.getFormValue(M,i,a,o),r=M+"_interface_";let t=0;Object.keys(i).filter(a=>a.includes(r)).map(a=>a.replace(r,"")).forEach(a=>{e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);let o="/etc/NetworkManager/system-connections/",s="";const _=n("wifi_enabled",a),p=n("available_in_initrd",a),A=n("ipv4_enabled",a),v=n("ipv4_auto_dns",a),F=n("ipv6_enabled",a),h=n("ipv6_auto_dns",a),d=n("ipv4_network_type",a)==="DHCP",g=n("ipv6_network_type",a)==="DHCP",$=n("key_mgmt",a),S=n(_===!0?"wifi_ssid_content":"interface",a);o=o.concat(S,".nmconnection"),s=s.concat(`
[connection]`,`
`,"id=",S,`
`,"type=",_===!0?"wifi":"ethernet",`
`,"interface-name=",n("interface",a),`
`),s=s.concat(`
[ipv4]`,`
`,`dns-search=
`),A===!0?(s=s.concat("method=",d===!0?"auto":"manual",`
`),d===!1&&(s=s.concat("address1=",n("ipv4_address",a),"/",n("ipv4_netmask",a)),n("ipv4_gateway",a)!=null&&(s=s.concat(",",n("ipv4_gateway",a))),s=s.concat(`
`)),n("ipv4_dns",a)&&(s=s.concat("dns=",n("ipv4_dns",a),`
`)),v==!1&&(s=s.concat(`ignore_auto_dns=true
`))):s=s.concat("method=disabled",`
`),s=s.concat(`
[ipv6]`,`
`,`dns-search=
`,`addr-gen-mode=eui64
`),F===!0?(s=s.concat("method=",g===!0?"auto":"manual",`
`),g===!1&&(s=s.concat("address1=",n("ipv6_address",a),"/",n("ipv6_netmask",a)),n("ipv6_gateway",a)!=null&&(s=s.concat(",",n("ipv6_gateway",a))),s=s.concat(`
`)),n("ipv6_dns",a)&&(s=s.concat("dns=",n("ipv6_dns",a),`
`)),h==!1&&(s=s.concat(`ignore_auto_dns=true
`))):s=s.concat("method=ignore",`
`),_===!0&&(s=s.concat(`
[wifi]`,`
`,"ssid=",n("wifi_ssid_content",a),`
`),$!=="none"&&(s=s.concat(`
[wifi-security]`,`
`,"key-mgmt=",$==="WPA3 Personal"?"sae":"wpa-psk",`
`,"psk=",n("wifi_password_content",a),`
`))),p?e.combustion_initrd_and_running_system+=`umask 077 # Required for NM config
mkdir -p /etc/NetworkManager/system-connections/
cat >`+o+` <<-EOF
`+s+`EOF

`:e.storage.files.push({path:o,mode:384,overwrite:!0,contents:{source:"data:text/plain;charset=utf-8;base64,"+u.b64EncodeUnicode(s),human_read:s}}),t==0&&(s=`[main]
# Do not do automatic (DHCP/SLAAC) configuration on ethernet devices
# with no other matching connections.
no-auto-default=*
`,e.storage.files.push({path:"/etc/NetworkManager/conf.d/noauto.conf",mode:420,overwrite:!0,contents:{source:"data:text/plain;charset=utf-8;base64,"+u.b64EncodeUnicode(s),human_read:s}})),t++})},encodeToExport:function(e,i){const n=(t,a)=>u.getFormValue(M,i,t,a),r=M+"_interface_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.network===void 0&&(e.network={}),e.network.interfaces===void 0&&(e.network.interfaces=[]);let a={};a.name=n("interface",t),n("wifi_enabled",t)&&(a.wifi={},a.wifi.key_mgmt=n("key_mgmt",t),a.wifi.ssid=n("wifi_ssid_content",t),a.wifi.password=n("wifi_password_content",t)),a.available_in_initrd=n("available_in_initrd",t),n("ipv4_enabled",t)&&(a.ipv4={},a.ipv4.network_type=n("ipv4_network_type",t),a.ipv4.auto_dns_enabled=n("ipv4_auto_dns",t),a.ipv4.dns=n("ipv4_dns",t),a.ipv4.network_type==="fixed IPv4 Address"&&(a.ipv4.address=n("ipv4_address",t),a.ipv4.netmask=n("ipv4_netmask",t),a.ipv4.gateway=n("ipv4_gateway",t))),n("ipv6_enabled",t)&&(a.ipv6={},a.ipv6.network_type=n("ipv6_network_type",t),a.ipv6.auto_dns_enabled=n("ipv6_auto_dns",t),a.ipv6.dns=n("ipv6_dns",t),a.ipv6.network_type==="fixed IPv6 Address"&&(a.ipv6.address=n("ipv6_address",t),a.ipv6.netmask=n("ipv6_netmask",t),a.ipv6.gateway=n("ipv6_gateway",t))),e.network.interfaces.push(a)})},fillImport:function(e,i){const n=(t,a,o)=>u.setFormValue(M,i,t,a,o),r=M+"_interface_";e.network==null||e.network.interfaces==null||Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{let a=e.network.interfaces.shift();n("interface",t,a.name),a.wifi!=null?(n("wifi_enabled",t,!0),n("key_mgmt",t,a.wifi.key_mgmt),n("wifi_ssid_content",t,a.wifi.ssid),n("wifi_password_content",t,a.wifi.password)):n("wifi_enabled",t,!1),a.available_in_initrd!=null&&n("available_in_initrd",t,a.available_in_initrd),a.ipv4!=null?(n("ipv4_enabled",t,!0),n("ipv4_network_type",t,a.ipv4.network_type),n("ipv4_auto_dns",t,a.ipv4.auto_dns_enabled),n("ipv4_dns",t,a.ipv4.dns),a.ipv4.network_type==="fixed IPv4 Address"&&(n("ipv4_address",t,a.ipv4.address),n("ipv4_netmask",t,a.ipv4.netmask),n("ipv4_gateway",t,a.ipv4.gateway))):n("ipv4_enabled",t,!1),a.ipv6!=null?(n("ipv6_enabled",t,!0),n("ipv6_network_type",t,a.ipv6.network_type),n("ipv6_auto_dns",t,a.ipv6.auto_dns_enabled),n("ipv6_dns",t,a.ipv6.dns),a.ipv6.network_type==="fixed IPv6 Address"&&(n("ipv6_address",t,a.ipv6.address),n("ipv6_netmask",t,a.ipv6.netmask),n("ipv6_gateway",t,a.ipv6.gateway))):n("ipv6_enabled",t,!1)})},countImport:function(e){return e.network!=null&&e.network.interfaces!=null?e.network.interfaces.length:0}}},en={key:0},tn={class:"container-fluid"},nn={class:"row"},an=c("div",{class:"col-1"},null,-1),on={class:"col-12"},rn={key:0},sn={key:1},ln={class:"container-fluid"},cn={class:"row"},un=c("div",{class:"col-1"},null,-1),dn={class:"col-12"},mn={key:0},pn={key:2},fn={class:"container-fluid"},_n={class:"row"},hn=c("div",{class:"col-1"},null,-1),gn={class:"col-12"},yn={key:0};function vn(e,i,n,r,t,a){const o=b("FormKit");return m(),f(E,null,[l(o,{name:e.formKey("interface"),label:"Interface Name",type:"text",placeholder:"e.g. eth0, wlan0,... ",validation:"required","validation-visibility":"live",help:" "},null,8,["name"]),l(o,{name:e.formKey("ipv4_enabled"),label:"IPv4 Network enabled",type:"checkbox","validation-behavior":"live",modelValue:e.ipv4enabled,"onUpdate:modelValue":i[0]||(i[0]=s=>e.ipv4enabled=s)},null,8,["name","modelValue"]),e.ipv4enabled===!0?(m(),f("div",en,[c("div",tn,[c("div",nn,[an,c("div",on,[l(o,{type:"select",name:e.formKey("ipv4_network_type"),modelValue:e.ipv4networkType,"onUpdate:modelValue":i[1]||(i[1]=s=>e.ipv4networkType=s),label:"Network Address via",help:"Select how the network address of the interface will be set/evaluated.",options:["DHCP","fixed IPv4 Address"]},null,8,["name","modelValue"]),e.ipv4networkType==="fixed IPv4 Address"?(m(),f("div",rn,[l(o,{name:e.formKey("ipv4_address"),label:"IP Address",placeholder:"___.___.___.___",type:"text",validation:[["required"],["matches",/^(([1-9]?\d|[12]\d\d)\.){3}([1-9]?\d|[12]\d\d)$/]],"validation-messages":{matches:"IP number must be in the format xxx.xxx.xxx.xxx"},help:"IPv4 address in the format xxx.xxx.xxx.xxx","validation-visibility":"live"},null,8,["name","validation","validation-messages"]),l(o,{name:e.formKey("ipv4_netmask"),label:"Netmask",type:"number",value:"24",validation:"between:0,32","validation-visibility":"live",help:"Values between 0 and 32"},null,8,["name"]),l(o,{name:e.formKey("ipv4_gateway"),label:"Gateway",placeholder:"___.___.___.___",type:"text",validation:[["matches",/^(([1-9]?\d|[12]\d\d)\.){3}([1-9]?\d|[12]\d\d)$/]],"validation-messages":{matches:"IP number must be in the format xxx.xxx.xxx.xxx"},help:"Gateway address in the format xxx.xxx.xxx.xxx","validation-visibility":"live"},null,8,["name","validation","validation-messages"])])):y("",!0),l(o,{name:e.formKey("ipv4_auto_dns"),label:"Evaluate DNS servers via DHCP",type:"checkbox",value:!0,"validation-behavior":"live",help:"DNS server settings are evalutated automatically."},null,8,["name"]),l(o,{name:e.formKey("ipv4_dns"),label:"DNS servers",type:"text","validation-behavior":"live",help:"Additional DNS servers separated by a semicolon (;)."},null,8,["name"])])])])])):y("",!0),l(o,{name:e.formKey("ipv6_enabled"),label:"IPv6 Network enabled",type:"checkbox","validation-behavior":"live",modelValue:e.ipv6enabled,"onUpdate:modelValue":i[2]||(i[2]=s=>e.ipv6enabled=s)},null,8,["name","modelValue"]),e.ipv6enabled===!0?(m(),f("div",sn,[c("div",ln,[c("div",cn,[un,c("div",dn,[l(o,{type:"select",name:e.formKey("ipv6_network_type"),modelValue:e.ipv6networkType,"onUpdate:modelValue":i[3]||(i[3]=s=>e.ipv6networkType=s),label:"Network Address via",help:"Select how the network address of the interface will be set/evaluated.",options:["DHCP","fixed IPv6 Address"]},null,8,["name","modelValue"]),e.ipv6networkType==="fixed IPv6 Address"?(m(),f("div",mn,[l(o,{name:e.formKey("ipv6_address"),label:"IP Address",placeholder:"____:____:____:____:____:____:____:____",type:"text",validation:[["required"],["matches",/^[0-9a-fA-F]{1,4}(:[0-9a-fA-F]{1,4}){7}$/]],"validation-messages":{matches:"IP number must be in the format ____:____:____:____:____:____:____:____"},help:"IPv6 address in the format ____:____:____:____:____:____:____:____","validation-visibility":"live"},null,8,["name","validation"]),l(o,{name:e.formKey("ipv6_netmask"),label:"Netmask",type:"number",value:"64",validation:"between:0,128","validation-visibility":"live",help:"Values between 0 and 128"},null,8,["name"]),l(o,{name:e.formKey("ipv6_gateway"),label:"Gateway",placeholder:"____:____:____:____:____:____:____:____",type:"text",validation:[["matches",/^[0-9a-fA-F]{1,4}(:[0-9a-fA-F]{1,4}){7}$/]],"validation-messages":{matches:"IP number must be in the format ____:____:____:____:____:____:____:____"},help:"Gateway address in the format ____:____:____:____:____:____:____:____","validation-visibility":"live"},null,8,["name","validation"])])):y("",!0),l(o,{name:e.formKey("ipv6_auto_dns"),label:"Evaluate DNS servers via DHCP",type:"checkbox",value:!0,"validation-behavior":"live",help:"DNS server settings are evalutated automatically."},null,8,["name"]),l(o,{name:e.formKey("ipv6_dns"),label:"DNS servers",type:"text","validation-behavior":"live",help:"Additional DNS servers separated by a semicolon (;)."},null,8,["name"])])])])])):y("",!0),l(o,{name:e.formKey("wifi_enabled"),label:"Enable WiFi",type:"checkbox","validation-behavior":"live",modelValue:e.wifienabled,"onUpdate:modelValue":i[4]||(i[4]=s=>e.wifienabled=s),help:"Whether interface will be connected to WiFi."},null,8,["name","modelValue"]),e.wifienabled===!0?(m(),f("div",pn,[c("div",fn,[c("div",_n,[hn,c("div",gn,[l(o,{name:e.formKey("wifi_ssid_content"),label:"SSID",type:"text",placeholder:"Service Set IDentifier (SSID)",validation:"required","validation-behavior":"live",help:"Uniquely name of a wireless local area network (WLAN)."},null,8,["name"]),l(o,{type:"select",name:e.formKey("key_mgmt"),modelValue:e.keymgmt,"onUpdate:modelValue":i[5]||(i[5]=s=>e.keymgmt=s),label:"Key Management",help:"Key management used for the connection.",options:["none","WPA & WPA2 Personal","WPA3 Personal"],value:"WPA & WPA2 Personal"},null,8,["name","modelValue"]),e.keymgmt!=="none"?(m(),f("div",yn,[l(o,{name:e.formKey("wifi_password_content"),label:"Password",type:"text",help:"Password required for the WiFi connection."},null,8,["name"])])):y("",!0)])])])])):y("",!0),l(o,{name:e.formKey("available_in_initrd"),label:"Also enabled during installation process",type:"checkbox","validation-behavior":"live",help:"Whether interface will also be available during the installation process."},null,8,["name"])],64)}var oe=x(jt,[["render",vn]]);const U="change_storage",bn={setup:()=>{const e=u.uid(),i=w("Grow root partition"),n=w(!0),r=w(!0);return{task:i,root_full_size:n,swap_full_size:r,formKey:t=>u.getFormKey(U,t,e)}},methods:{encodeToInstallation:function(e,i){const n=(s,_)=>u.getFormValue(U,i,s,_),r=U+"_task_";let t=0,a=!0,o=!1;Object.keys(i).filter(s=>s.includes(r)).map(s=>s.replace(r,"")).forEach(s=>{n("task",s)==="Encrypt disk"&&(o=!0)}),Object.keys(i).filter(s=>s.includes(r)).map(s=>s.replace(r,"")).forEach(s=>{e.storage===void 0&&(e.storage={}),e.storage.files===void 0&&(e.storage.files=[]);let _="/etc/repart.d/",p="";const A=n("task",s);if(A==="Grow root partition"){_=_.concat(t+10,"-root.conf"),p=p.concat(`[Partition]
`,`Type=root
`);const v=n("min_root",s),F=n("max_root",s),h=n("root_full_size",s);v&&!h&&(p=p.concat("SizeMinBytes=",v,`M
`)),F&&!h&&(p=p.concat("SizeMaxBytes=",F,`M
`))}if(A==="Create swap partition if missing"){_=_.concat(t+10,"-swap.conf"),p=p.concat(`[Partition]
`,`Type=swap
`);const v=n("min_swap",s),F=n("max_swap",s),h=n("swap_full_size",s);v&&!h&&(p=p.concat("SizeMinBytes=",v,`M
`)),F&&!h&&(p=p.concat("SizeMaxBytes=",F,`M
`))}if(A==="Apply custom storage changes"){_=_.concat(t+10,"-partition.conf"),p=p.concat(`[Partition]
`);const v=n("type",s);v&&(p=p.concat("Type=",v.split(" ")[0],`
`));const F=n("label",s);F&&(p=p.concat("Label=",F,`
`));const h=n("format",s);h&&h!=="none"&&(p=p.concat("Format=",h,`
`));const d=n("min_disk_space",s),g=n("max_disk_space",s);d&&(p=p.concat("SizeMinBytes=",d,`M
`)),g&&(p=p.concat("SizeMaxBytes=",g,`M
`));const $=n("individuals",s);$&&(p=p.concat($))}if(A==="Encrypt disk"){e.combustion_initrd+=`  # We set disk-encryption-tool-dracut.encryption credential to
  # "force".  This will make disk-encryption-tool-dracut force the
  # encryption, ignoring that Combusion configured the system, and
  # will skip the permission countdown
  #
  # After the encryption the recovery key is registered in the
  # kernel keyring %user:cryptenroll
  mkdir -p /run/credstore
  echo "force" > /run/credstore/disk-encryption-tool-dracut.encrypt
`;const v=n("password",s),F=n("tpm2_enroll",s),h=n("fido2_enroll",s);e.combustion+=`
# Disk Encryption
#
# Create a valid machine-id, as this will be required to create later
# the host secret
systemd-machine-id-setup
# We want to persist the host secret key created via systemd-cred
# (/var/lib/systemd/credential.secret)
mount /var
mkdir -p /etc/credstore.encrypted
credential="$(mktemp disk-encryption-tool.XXXXXXXXXX)"
# Enroll extra password
echo "`+v+`" > "$credential"
systemd-creds encrypt --name=sdbootutil-enroll.pw "$credential" \\
               /etc/credstore.encrypted/sdbootutil-enroll.pw
`,F&&(e.combustion+=`# Enroll TPM2
echo "1" > "$credential"
systemd-creds encrypt --name=sdbootutil-enroll.tpm2 "$credential" \\
             /etc/credstore.encrypted/sdbootutil-enroll.tpm2
`),h&&(e.combustion+=`# Enroll FIDO2. While firstboot the FIDO key has to be inserted/available.
echo "1" > "$credential"
systemd-creds encrypt --name=sdbootutil-enroll.fido2 "$credential" \\
	      /etc/credstore.encrypted/sdbootutil-enroll.fido2
`),e.combustion+=`shred -u "$credential"
# Umount back /var to not confuse tukit later
umount /var
`}else o?(a&&(a=!1,e.combustion_initrd+=`   mkdir -p /etc/repart.d
`),e.combustion_initrd+='   echo -e "'+p+'" >'+_+`
`):e.storage.files.push({path:_,mode:384,overwrite:!0,contents:{source:"data:text/plain;charset=utf-8;base64,"+u.b64EncodeUnicode(p),human_read:p}});t++})},encodeToExport:function(e,i){const n=(t,a)=>u.getFormValue(U,i,t,a),r=U+"_task_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.storage===void 0&&(e.storage={}),e.storage.tasks===void 0&&(e.storage.tasks=[]);const a={};if(a.kind=n("task",t),a.kind==="Encrypt disk"&&(a.password=n("password",t),a.tpm2_enroll=n("tpm2_enroll",t),a.fido2_enroll=n("fido2_enroll",t)),a.kind==="Grow root partition"){const o=n("min_root",t),s=n("max_root",t),_=n("root_full_size",t);a.auto=_,o&&!_&&(a.min=o),s&&!_&&(a.max=s)}if(a.kind==="Create swap partition if missing"){const o=n("min_swap",t),s=n("max_swap",t),_=n("swap_full_size",t);a.auto=_,o&&!_&&(a.min=o),s&&!_&&(a.max=s)}if(a.kind==="Apply custom storage changes"){const o=n("type",t);o&&(a.type=o);const s=n("label",t);s&&(a.label=s);const _=n("format",t);_&&(a.format=_);const p=n("min_disk_space",t),A=n("max_disk_space",t);p&&(a.min=p),A&&(a.max=A);const v=n("individuals",t);v&&(a.individuals=v)}e.storage.tasks.push(a)})},fillImport:function(e,i){const n=(t,a,o)=>u.setFormValue(U,i,t,a,o),r=U+"_task_";e.storage==null||e.storage.tasks==null||Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{let a=e.storage.tasks.shift();a.kind!=null&&n("task",t,a.kind),a.kind==="Grow root partition"&&(a.auto&&n("root_full_size",t,!0),a.auto||(a.min&&n("min_root",t,a.min),a.min&&n("max_root",t,a.max))),a.kind==="Encrypt disk"&&(a.password&&n("password",t,a.password),a.tpm2_enroll&&n("tpm2_enroll",t,!0),a.fido2_enroll&&n("fido2_enroll",t,!0)),a.kind==="Create swap partition if missing"&&(a.auto&&n("swap_full_size",t,!0),a.auto||(a.min&&n("min_swap",t,a.min),a.min&&n("max_swap",t,a.max))),a.kind==="Apply custom storage changes"&&(a.type&&n("type",t,a.type),a.label&&n("label",t,a.label),a.format&&n("format",t,a.format),a.min&&n("min_disk_space",t,a.min),a.min&&n("max_disk_space",t,a.max),a.individuals&&n("individuals",t,a.individuals))})},countImport:function(e){return e.storage!=null&&e.storage.tasks!=null?e.storage.tasks.length:0}}},kn={key:0},An={key:1},wn={key:0},xn={class:"row"},$n=c("div",{class:"col-1"},null,-1),Tn={class:"col-12"},Fn={key:2},En={key:0},Pn={class:"row"},Kn=c("div",{class:"col-1"},null,-1),Sn={class:"col-12"},Vn={key:3};function In(e,i,n,r,t,a){const o=b("FormKit");return m(),f(E,null,[l(o,{name:e.formKey("task"),label:"Task",type:"select",modelValue:e.task,"onUpdate:modelValue":i[0]||(i[0]=s=>e.task=s),options:["Grow root partition","Create swap partition if missing","Encrypt disk","Apply custom storage changes"],validation:"required","validation-visibility":"live",help:"Increasing/Adding partitions/swaps needs free space on the medium. Otherwise it will run into an error while installaiton."},null,8,["name","modelValue"]),e.task==="Encrypt disk"?(m(),f("div",kn,[l(o,{name:e.formKey("password"),type:"text",label:"Password",placeholder:"Encryption password",validation:"required","validation-visibility":"live",help:" "},null,8,["name"]),l(o,{name:e.formKey("tpm2_enroll"),label:"Add TPM2 (Trusted Platform Module) support",type:"checkbox",help:"Using secure chip with integrated cryptographic keys. An automatic way to decrypt the storage."},null,8,["name"]),l(o,{name:e.formKey("fido2_enroll"),label:"Add FIDO2 (Fast Identity Online) support",type:"checkbox",help:"Using e.g. external USB FIDO2 security key. An automatic way to decrypt the storage. The key has to be inserted/available during the first boot."},null,8,["name"])])):y("",!0),e.task==="Grow root partition"?(m(),f("div",An,[l(o,{name:e.formKey("root_full_size"),label:"to the full disk size",type:"checkbox",modelValue:e.root_full_size,"onUpdate:modelValue":i[1]||(i[1]=s=>e.root_full_size=s),help:" "},null,8,["name","modelValue"]),e.root_full_size===!1?(m(),f("div",wn,[c("div",xn,[$n,c("div",Tn,[l(o,{type:"number",name:e.formKey("min_root"),"validation-behavior":"live",label:"Minimum required disk space (MByte)",help:" "},null,8,["name"]),l(o,{type:"number",name:e.formKey("max_root"),"validation-behavior":"live",label:"Maximum required disk space (MByte)",help:" "},null,8,["name"])])])])):y("",!0)])):y("",!0),e.task==="Create swap partition if missing"?(m(),f("div",Fn,[l(o,{name:e.formKey("swap_full_size"),label:"take all available disk space",type:"checkbox",modelValue:e.swap_full_size,"onUpdate:modelValue":i[2]||(i[2]=s=>e.swap_full_size=s),help:" "},null,8,["name","modelValue"]),e.swap_full_size===!1?(m(),f("div",En,[c("div",Pn,[Kn,c("div",Sn,[l(o,{type:"number",name:e.formKey("min_swap"),"validation-behavior":"live",label:"Minimum required disk space (MByte)",help:" "},null,8,["name"]),l(o,{type:"number",name:e.formKey("max_swap"),"validation-behavior":"live",label:"Maximum required disk space (MByte)",help:" "},null,8,["name"])])])])):y("",!0)])):y("",!0),e.task==="Apply custom storage changes"?(m(),f("div",Vn,[l(o,{name:e.formKey("type"),label:"Type",type:"select",options:["esp - EFI System Partition","xbootldr - Extended Boot Loader Partition","swap - Swap partition","home - Home (/home/) partition","srv - Server data (/srv/) partition","var - Variable data (/var/) partition","tmp - Temporary data (/var/tmp/) partition","linux-generic - Generic Linux file system partition","root - Root file system partition type appropriate for the local architecture ","root-verity - Verity data for the root file system partition for the local architecture","root-verity-sig - Verity signature data for the root file system partition for the local architecture","root-secondary - Root file system partition of the secondary architecture of the local architecture","root-secondary-verity - Verity data for the root file system partition of the secondary architecture","root-secondary-verity-sig - Verity signature data for the root file system partition of the secondary architecture","root-x86-64 - Root file system partition of the given architecture ","root-ppc - Root file system partition of the given architecture ","root-s390- Root file system partition of the given architecture ","root-s390x - Root file system partition of the given architecture ","root-ia64 - Root file system partition of the given architecture ","root-x86-64-verity - Verity data for the root file system partition of the given architecture","root-ppc-verity - Verity data for the root file system partition of the given architecture","root-s390-verity - Verity data for the root file system partition of the given architecture","root-s390x-verity - Verity data for the root file system partition of the given architecture","root-ia64-verity - Verity data for the root file system partition of the given architecture","root-x86-64-verity-sig - Verity signature data for the root file system partition of the given architecture","root-ppc-verity-sig - Verity signature data for the root file system partition of the given architecture","root-s390-verity-sig - Verity signature data for the root file system partition of the given architecture","root-s390x-verity-sig - Verity signature data for the root file system partition of the given architecture","root-ia64-verity-sig - Verity signature data for the root file system partition of the given architecture","usr - /usr/ file system partition type appropriate for the local architecture","usr-verity - Verity data for the /usr/ file system partition for the local architecture","usr-verity-sig - Verity signature data for the /usr/ file system partition for the local architecture","usr-secondary - /usr/ file system partition of the secondary architecture of the local architecture","usr-secondary-verity - Verity data for the /usr/ file system partition of the secondary architecture","usr-secondary-verity-sid - Verity signature data for the /usr/ file system partition of the secondary architecture","usr-x86-64 - /usr/ file system partition of the given architecture","usr-ppc - /usr/ file system partition of the given architecture","usr-s390 - /usr/ file system partition of the given architecture","usr-s390x - /usr/ file system partition of the given architecture","usr-ia64 - /usr/ file system partition of the given architecture","usr-x86-64-verity - Verity data for the /usr/ file system partition of the given architecture","usr-ppc-verity - Verity data for the /usr/ file system partition of the given architecture","usr-s390-verity - Verity data for the /usr/ file system partition of the given architecture","usr-s390x-verity - Verity data for the /usr/ file system partition of the given architecture","usr-ia64-verity - Verity data for the /usr/ file system partition of the given architecture","usr-x86-64-verity-sig - Verity signature data for the /usr/ file system partition of the given architecture","usr-ppc-verity-sig - Verity signature data for the /usr/ file system partition of the given architecture","usr-s390-verity-sig - Verity signature data for the /usr/ file system partition of the given architecture","usr-s390x-verity-sig - Verity signature data for the /usr/ file system partition of the given architecture","usr-ia64-verity-sig - Verity signature data for the /usr/ file system partition of the given architecture"],validation:"required","validation-visibility":"live",help:"GPT partition type identifiers"},null,8,["name","options"]),l(o,{name:e.formKey("label"),label:"Label",type:"text",help:"The textual label to assign to the partition if none is assigned yet."},null,8,["name"]),l(o,{name:e.formKey("format"),label:"Format",type:"select",options:["none","ext4","btrfs","xfs","vfat","erofs","squashfs","swap"],validation:"required","validation-visibility":"live",help:"If specified and the partition is newly created it is formatted with the specified file system (or as swap device)."},null,8,["name"]),l(o,{type:"number",name:e.formKey("min_disk_space"),label:"Minimum required disk space (MByte)",help:" "},null,8,["name"]),l(o,{type:"number",name:e.formKey("max_disk_space"),label:"Maximum required disk space (MByte)",help:" "},null,8,["name"]),l(o,{name:e.formKey("individuals"),label:"Individual settings",placeholder:`e.g.
Priority=5
Weight=100`,type:"textarea","validation-behavior":"live",help:"defined in https://www.freedesktop.org/software/systemd/man/latest/repart.d.html"},null,8,["name"])])):y("",!0)],64)}var re=x(bn,[["render",In]]);const B="start_service",Cn={setup:()=>{const e=u.uid();return{sourceType:w("data"),formKey:n=>u.getFormKey(B,n,e)}},methods:{encodeToInstallation:function(e,i){const n=(t,a)=>u.getFormValue(B,i,t,a),r=B+"_name_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.systemd="systemd"in e?e.systemd:{units:[]};let a=n("enabled",t),o=a==="omit";e.systemd.units.push({name:n("name",t),enabled:o?void 0:a==="yes",contents:n("contents",t)?n("contents",t):void 0})})},encodeToExport:function(e,i){const n=(t,a)=>u.getFormValue(B,i,t,a),r=B+"_name_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.systemd===void 0&&(e.systemd={}),e.systemd.units===void 0&&(e.systemd.units=[]);let a={};a.name=n("name",t),a.enabled=n("enabled",t),n("contents",t)&&(a.contents=n("contents",t)),e.systemd.units.push(a)})},fillImport:function(e,i){const n=(t,a,o)=>u.setFormValue(B,i,t,a,o),r=B+"_name_";e.systemd==null||e.systemd.units==null||Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{let a=e.systemd.units.shift();n("name",t,a.name),n("enabled",t,a.enabled),n("contents",t,a.contents)})},countImport:function(e){return e.systemd!=null&&e.systemd.units!=null?e.systemd.units.length:0}}},Mn={class:"startservices"};function Un(e,i,n,r,t,a){const o=b("FormKit");return m(),f("div",Mn,[l(o,{name:e.formKey("name"),label:"Service Name (required)",validation:"required","validation-behavior":"live",value:"example.service",help:"Every unit must have a unique name. This must be suffixed with a valid unit type (e.g. \u201Cthing.service\u201D)."},null,8,["name"]),l(o,{name:e.formKey("enabled"),label:"enabled",value:"yes",validation:"optional",type:"select","validation-behavior":"live",help:"Whether or not the service shall be enabled. When true, the service is enabled. When false, the service is disabled. When omitted, the service is unmodified.",options:["yes","no","omit"]},null,8,["name"]),l(o,{name:e.formKey("contents"),label:"Service Unit Content (optional)",placeholder:"write the service unit content here, spaces, newlines etc. are preserved",type:"textarea",validation:"optional","validation-behavior":"live",help:"The contents of the unit."},null,8,["name"])])}var se=x(Cn,[["render",Un]]);const O="modify_service",Bn={setup:()=>{const e=u.uid();return{formKey:i=>u.getFormKey(O,i,e)}},methods:{encodeToInstallation:function(e,i){const n=(t,a)=>u.getFormValue(O,i,t,a),r=O+"_name_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.systemd="systemd"in e?e.systemd:{units:[]};let a=e.systemd.units.find(s=>s.name===n("name",t)),o={name:n("dropin_name",t),contents:n("contents",t)};if(a!==void 0){if(a.dropins!==void 0){a.dropins.push(o);return}a.dropins=[o];return}e.systemd.units.push({name:n("name",t),dropins:[o]})})},encodeToExport:function(e,i){const n=(t,a)=>u.getFormValue(O,i,t,a),r=O+"_name_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.systemd===void 0&&(e.systemd={}),e.systemd.dropins===void 0&&(e.systemd.dropins=[]);let a={};a.name=n("name",t),a.dropin_name=n("dropin_name",t),a.contents=n("contents",t),e.systemd.dropins.push(a)})},fillImport:function(e,i){const n=(t,a,o)=>u.setFormValue(O,i,t,a,o),r=O+"_name_";e.systemd==null||e.systemd.dropins==null||Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{let a=e.systemd.dropins.shift();n("name",t,a.name),n("dropin_name",t,a.dropin_name),n("contents",t,a.contents)})},countImport:function(e){return e.systemd!=null&&e.systemd.dropins!=null?e.systemd.dropins.length:0}}},On={class:"modifyservice"};function Nn(e,i,n,r,t,a){const o=b("FormKit");return m(),f("div",On,[l(o,{name:e.formKey("name"),label:"Name of the service that you want to modify (required)",validation:"required","validation-behavior":"live",value:"example.service",placeholder:"e.g. systemd-journald.service",help:"The name of the unit. This must be suffixed with a valid unit type (e.g. \u201Cthing.service\u201D)."},null,8,["name"]),l(o,{name:e.formKey("dropin_name"),label:"Name of the drop-in file",validation:"required","validation-behavior":"live",value:"debug.conf",help:"The name of the drop-in. This must be suffixed with \u201C.conf\u201D."},null,8,["name"]),l(o,{name:e.formKey("contents"),label:"Drop-In Unit Content (required)",placeholder:"e.g. [Service].. | spaces, newlines etc. are preserved",type:"textarea",validation:"required","validation-behavior":"live",help:"Write the service unit content here, spaces, newlines etc. are preserved."},null,8,["name"])])}var le=x(Bn,[["render",Nn]]);const ce="debug_bytes",zn={setup:()=>{const e=u.uid();return{uid:e,formKey:i=>u.getFormKey(ce,i,e)}},methods:{encodeToInstallation:function(e,i){const n=(t,a)=>u.getFormValue(ce,i,t,a),r=ce+"_size_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{var a=new Array(parseInt(n("size",t)-128)+1).join("B");e.debugBytes=e.debugBytes!==void 0?e.debugBytes:[],e.debugBytes.push(a)})}}},Rn={class:"users"};function qn(e,i,n,r,t,a){const o=b("FormKit");return m(),f("div",Rn,[l(o,{name:e.formKey("size"),label:"Bytes To Add",type:"number",validation:"required","validation-behavior":"live",value:"2048",help:"This is a debug form."},null,8,["name"])])}var ue=x(zn,[["render",qn]]);const xe="debug_analyze",Ln={setup:()=>{const e=u.uid();let i=new Ae;return console.log(i),{uid:e,formKey:n=>u.getFormKey(xe,n,e)}},methods:{encodeToInstallation:function(e,i){const n=xe+"_file_";Object.keys(i).filter(r=>r.includes(n)).map(r=>r.replace(n,"")).forEach(r=>{console.log("--- debug analyze file ---");let t;try{console.log('formData["debug_analyze_file_" + id] :>> ',i["debug_analyze_file_"+r]),t=Object.assign({},i["debug_analyze_file_"+r][0])}catch{}console.log(t),console.log("-----")})}}},Hn={class:"analyze"};function Gn(e,i,n,r,t,a){const o=b("FormKit");return m(),f("div",Hn,[l(o,{name:e.formKey("file"),label:"File To Analyze (Console Log)",type:"file",validation:"required","validation-behavior":"live",help:"This is a debug form."},null,8,["name"])])}var $e=x(Ln,[["render",Gn]]);const Y="comb_keyboard",Dn={setup:()=>{const e=u.uid();return{uid:e,formKey:i=>u.getFormKey(Y,i,e),keyboards:()=>H.availableKeyboards()}},methods:{encodeToInstallation:function(e,i){Object.keys(i).filter(n=>n.includes(Y)).forEach(n=>{e.combustion+=`
# Keyboard
systemd-firstboot --force --keymap=`+H.keyboardCode(i[n])+`
`})},encodeToExport:function(e,i){Object.keys(i).filter(n=>n.includes(Y)).forEach(n=>{e.keyboard=i[n]})},fillImport:function(e,i){e.keyboard!=null&&Object.keys(i).filter(n=>n.includes(Y)).forEach(n=>{i[n]=e.keyboard})},countImport:function(e){return e.keyboard!=null?1:0}}};function Wn(e,i,n,r,t,a){const o=b("FormKit");return m(),W(o,{type:"select",name:e.formKey("keyboard"),label:"Keyboard",validation:"required","validation-behavior":"live",options:e.keyboards(),help:"select keyboard"},null,8,["name","options"])}var de=x(Dn,[["render",Wn]]);const Jn=new Array("UTC","Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Asmera","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Timbuktu","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/ComodRivadavia","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Atka","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Buenos_Aires","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Catamarca","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Ciudad_Juarez","America/Coral_Harbour","America/Cordoba","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Nelson","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Indianapolis","America/Inuvik","America/Iqaluit","America/Jamaica","America/Jujuy","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Knox_IN","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Louisville","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Mendoza","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montreal","America/Montserrat","America/Nassau","America/New_York","America/Nipigon","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Nuuk","America/Ojinaga","America/Panama","America/Pangnirtung","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Acre","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rainy_River","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Rosario","America/Santa_Isabel","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Shiprock","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Thunder_Bay","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Virgin","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/South_Pole","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Ashkhabad","Asia/Atyrau","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beijing","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Calcutta","Asia/Chita","Asia/Choibalsan","Asia/Chongqing","Asia/Chungking","Asia/Colombo","Asia/Dacca","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Harbin","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Istanbul","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kashgar","Asia/Kathmandu","Asia/Katmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macao","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qostanay","Asia/Qyzylorda","Asia/Rangoon","Asia/Riyadh","Asia/Saigon","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Tel_Aviv","Asia/Thimbu","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ujung_Pandang","Asia/Ulaanbaatar","Asia/Ulan_Bator","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faeroe","Atlantic/Faroe","Atlantic/Jan_Mayen","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/ACT","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Canberra","Australia/Currie","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/LHI","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/NSW","Australia/North","Australia/Perth","Australia/Queensland","Australia/South","Australia/Sydney","Australia/Tasmania","Australia/Victoria","Australia/West","Australia/Yancowinna","Brazil/Acre","Brazil/DeNoronha","Brazil/East","Brazil/West","Canada/Atlantic","Canada/Central","Canada/Eastern","Canada/Mountain","Canada/Newfoundland","Canada/Pacific","Canada/Saskatchewan","Canada/Yukon","Chile/Continental","Chile/EasterIsland","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belfast","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kiev","Europe/Kirov","Europe/Kyiv","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Nicosia","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Saratov","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Tiraspol","Europe/Ulyanovsk","Europe/Uzhgorod","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zaporozhye","Europe/Zurich","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Mexico/BajaNorte","Mexico/BajaSur","Mexico/General","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Johnston","Pacific/Kanton","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Ponape","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Samoa","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Truk","Pacific/Wake","Pacific/Wallis","Pacific/Yap");var Yn={availableTimezones:()=>Jn};const X="comb_timezone",Xn={setup:()=>{const e=u.uid();return{uid:e,formKey:i=>u.getFormKey(X,i,e),timezones:()=>Yn.availableTimezones()}},methods:{encodeToInstallation:function(e,i){Object.keys(i).filter(n=>n.includes(X)).forEach(n=>{e.combustion+=`
# Timezone
systemd-firstboot --force --timezone=`+i[n]+`
`})},encodeToExport:function(e,i){Object.keys(i).filter(n=>n.includes(X)).forEach(n=>{e.timezone=i[n]})},fillImport:function(e,i){e.timezone!=null&&Object.keys(i).filter(n=>n.includes(X)).forEach(n=>{i[n]=e.timezone})},countImport:function(e){return e.timezone!=null?1:0}}};function Zn(e,i,n,r,t,a){const o=b("FormKit");return m(),W(o,{type:"select",name:e.formKey("timezone"),label:"Timezone",validation:"required","validation-behavior":"live",options:e.timezones(),help:"select timezone"},null,8,["name","options"])}var me=x(Xn,[["render",Zn]]);const N="comb_registration",Qn={setup:()=>{const e=u.uid(),i=w(!1);return{uid:e,usb_regcode:i,formKey:n=>u.getFormKey(N,n,e)}},methods:{encodeToInstallation:function(e,i){const n=(a,o)=>u.getFormValue(N,i,a,o);let r=0;const t=N+"_registrationserver_";Object.keys(i).filter(a=>a.includes(t)).map(a=>a.replace(t,"")).forEach(a=>{r===0&&(e.combustion+=`
# Registration
if ! which SUSEConnect > /dev/null 2>&1; then
    zypper --non-interactive install suseconnect-ng
fi
`),r++,e.combustion+='product="'+n("product",a)+`"
`,n("usb_regcode",a)===!0?e.combustion+=`for I in \`fdisk -l | grep '^/dev' | awk '{print $1}'\`
do
  if ! findmnt $I > /dev/null; then
    if mount $I /mnt; then
      if  [ -f /mnt/regcode.xml ]; then
        regcode=\`cat /mnt/regcode.xml|sed '2 s/xmlns=".*"//g'|xmllint --xpath "//addon[name='$product']/reg_code/text()" -\`
        umount /mnt
        break
      fi
      if  [ -f /mnt/regcode.txt ]; then
        regcode=$(grep $product /mnt/regcode.txt|awk '{print $2}')
        umount /mnt
        break
      fi
      umount /mnt
    fi
  fi
done
`:e.combustion+='regcode="'+n("regcode",a)+`"
`,n("product",a)&&n("product",a)!=="Base_Product"?(e.combustion+="architecture=`arch`\n",e.combustion+='version=`xmllint --xpath "//version/text()" /etc/products.d/baseproduct`\n',e.combustion+="SUSEConnect --product $product/$version/$architecture "):e.combustion+="SUSEConnect ",n("email",a)&&(e.combustion+="--email "+n("email",a)+" "),e.combustion+="--url "+n("registrationserver",a)+` --regcode $regcode
`})},encodeToExport:function(e,i){const n=(t,a)=>u.getFormValue(N,i,t,a),r=N+"_registrationserver_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.registration===void 0&&(e.registration={}),e.registration.registrations===void 0&&(e.registration.registrations=[]);let a={};a.registrationserver=n("registrationserver",t),a.regcode=n("regcode",t),a.product=n("product",t),a.email=n("email",t),a.usb_regcode=n("usb_regcode",t),e.registration.registrations.push(a)})},fillImport:function(e,i){const n=(t,a,o)=>u.setFormValue(N,i,t,a,o),r=N+"_registrationserver_";e.registration==null||e.registration.registrations==null||Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{let a=e.registration.registrations.shift();n("registrationserver",t,a.registrationserver),n("usb_regcode",t,a.usb_regcode),n("regcode",t,a.regcode),n("product",t,a.product),n("email",t,a.email)})},countImport:function(e){return e.registration!=null&&e.registration.registrations!=null?e.registration.registrations.length:0}}},jn={key:0};function ea(e,i,n,r,t,a){const o=b("FormKit");return m(),f(E,null,[l(o,{name:e.formKey("registrationserver"),label:"Registration server",type:"text",value:"https://scc.suse.com",help:"URL of the registration server"},null,8,["name"]),l(o,{name:e.formKey("product"),label:"Product name",type:"text",value:"Base_Product",help:"Product or extension name"},null,8,["name"]),l(o,{name:e.formKey("usb_regcode"),label:"Reading registration code from mounted USB medium",type:"checkbox","validation-behavior":"live",modelValue:e.usb_regcode,"onUpdate:modelValue":i[0]||(i[0]=s=>e.usb_regcode=s)},null,8,["name","modelValue"]),e.usb_regcode===!1?(m(),f("div",jn,[l(o,{name:e.formKey("regcode"),label:"Registration code",type:"text",value:"",help:"Subscription registration code for the product to be registered."},null,8,["name"])])):y("",!0),l(o,{name:e.formKey("email"),label:"Email",type:"email",validation:"email","validation-visibility":"live",help:"Email address for which the registration will be done (optional)."},null,8,["name"])],64)}var pe=x(Qn,[["render",ea]]);const z="comb_salt",ta={setup:()=>{const e=u.uid();return{preseedKeyVia:w("defining keys manually"),uid:e,formKey:n=>u.getFormKey(z,n,e)}},methods:{encodeToInstallation:function(e,i){const n=(t,a)=>u.getFormValue(z,i,t,a),r=z+"_master_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.combustion+=`
# Salt Minion
if ! which salt-minion > /dev/null 2>&1; then
    zypper --non-interactive install salt-minion
fi
`,n("master",t)&&(e.combustion+='echo "master: '+n("master",t)+`" \\
 >/etc/salt/minion.d/fuel-ignition.conf
`),n("preseed_key_via",t)=="defining keys manually"&&(n("minion_pem_key",t)&&(e.combustion+='echo "'+n("minion_pem_key",t)+`" \\
 >/etc/salt/pki/minion/minion.pem
`),n("minion_pub_key",t)&&(e.combustion+='echo "'+n("minion_pub_key",t)+`" \\
 >/etc/salt/pki/minion/minion.pub
`)),n("preseed_key_via",t)=="downloading keys from a ftp/http server"&&(e.combustion+=`if ! which curl > /dev/null 2>&1; then
    zypper --non-interactive install curl
fi
`,e.combustion+="curl ",n("url_login_name",t)&&n("url_login_password",t)&&(e.combustion+=" --user="+n("url_login_name",t)+":"+n("url_login_password",t)+" "),e.combustion+="-o /etc/salt/pki/minion/minion.pub "+n("key_url",t)+"/"+n("key_name",t)+`.pub
`,e.combustion+="curl ",n("url_login_name",t)&&n("url_login_password",t)&&(e.combustion+=" --user="+n("url_login_name",t)+":"+n("url_login_password",t)+" "),e.combustion+="-o /etc/salt/pki/minion/minion.pem "+n("key_url",t)+"/"+n("key_name",t)+`.pem
`),n("enableservice",t)&&(e.combustion+=`systemctl enable salt-minion.service
`)})},encodeToExport:function(e,i){const n=(t,a)=>u.getFormValue(z,i,t,a),r=z+"_master_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{e.salt===void 0&&(e.salt={}),e.salt.master=n("master",t),e.salt.preseed_key_via=n("preseed_key_via",t),e.salt.minion_pem_key=n("minion_pem_key",t),e.salt.minion_pub_key=n("minion_pub_key",t),e.salt.url_login_name=n("url_login_name",t),e.salt.url_login_password=n("url_login_password",t),e.salt.key_url=n("key_url",t),e.salt.key_name=n("key_name",t),e.salt.enableservice=n("enableservice",t)})},fillImport:function(e,i){const n=(t,a,o)=>u.setFormValue(z,i,t,a,o),r=z+"_master_";e.salt!=null&&Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{n("master",t,e.salt.master),n("preseed_key_via",t,e.salt.preseed_key_via),n("minion_pem_key",t,e.salt.minion_pem_key),n("minion_pub_key",t,e.salt.minion_pub_key),n("url_login_name",t,e.salt.url_login_name),n("url_login_password",t,e.salt.url_login_password),n("key_url",t,e.salt.key_url),n("key_name",t,e.salt.key_name),n("enableservice",t,e.salt.enableservice)})},countImport:function(e){return e.salt!=null?1:0}}},na={key:0},aa={key:1};function ia(e,i,n,r,t,a){const o=b("FormKit");return m(),f(E,null,[l(o,{name:e.formKey("master"),label:"Salt master",type:"text",validation:"required",help:"Host name or IP address of the configuration management server."},null,8,["name"]),l(o,{type:"select",name:e.formKey("preseed_key_via"),modelValue:e.preseedKeyVia,"onUpdate:modelValue":i[0]||(i[0]=s=>e.preseedKeyVia=s),label:"Preseed salt minion with accepted key",help:"Select how the keys are given.",options:["defining keys manually","downloading keys from a ftp/http server"]},null,8,["name","modelValue"]),e.preseedKeyVia==="defining keys manually"?(m(),f("div",na,[l(o,{name:e.formKey("minion_pem_key"),label:"Minion pem key",placeholder:`-----BEGIN RSA PRIVATE KEY-----
...
-----END RSA PRIVATE KEY-----`,type:"textarea","validation-behavior":"live",help:"Private key for communitcation with the master."},null,8,["name"]),l(o,{name:e.formKey("minion_pub_key"),label:"Minion pub key",placeholder:`-----BEGIN PUBLIC KEY-----
...
-----END PUBLIC KEY-----`,type:"textarea","validation-behavior":"live",help:"Public key for communitcation with the master."},null,8,["name"])])):y("",!0),e.preseedKeyVia==="downloading keys from a ftp/http server"?(m(),f("div",aa,[l(o,{name:e.formKey("key_name"),label:"Minion ID",type:"text",validation:"required","validation-behavior":"live",help:"Minion-ID which is the name of the key too. (<Minion ID>.pem, <Minion ID>.pub)"},null,8,["name"]),l(o,{name:e.formKey("key_url"),label:"Key download URL",type:"text",placeholder:"http://<download_server>/<directory>",validation:"required","validation-behavior":"live",help:"Path to a HTTP/FTP (and other curl formats) server which contains the files <Minion ID>.pem and <Minion ID>.pub"},null,8,["name"]),l(o,{name:e.formKey("url_login_name"),label:"Login name of the download server",type:"text","validation-behavior":"live",help:"optional"},null,8,["name"]),l(o,{name:e.formKey("url_login_password"),label:"Login password of the download server",type:"text","validation-behavior":"live",help:"optional"},null,8,["name"])])):y("",!0),l(o,{name:e.formKey("enableservice"),label:"Enable Salt Minion Service",type:"checkbox",value:!0,"validation-behavior":"live",help:"Whether the service will be enabled."},null,8,["name"])],64)}var fe=x(ta,[["render",ia]]);const R="s390_channel",oa={setup:()=>{const e=u.uid();return{uid:e,formKey:i=>u.getFormKey(R,i,e)}},methods:{encodeToInstallation:function(e,i){const n=(t,a)=>u.getFormValue(R,i,t,a),r=R+"_read_channel_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{n("read_channel",t)!=null&&n("write_channel",t)!=null&&n("data_channel",t)&&(e.combustion_initrd_and_running_system+=`# S390 Channels Setup
chzdev qeth `+n("read_channel",t)+","+n("write_channel",t)+","+n("data_channel",t)+` -e
`)})},encodeToExport:function(e,i){const n=(t,a)=>u.getFormValue(R,i,t,a),r=R+"_read_channel_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{if(n("read_channel",t)!=null&&n("write_channel",t)!=null&&n("data_channel",t)){e.s390===void 0&&(e.s390={}),e.s390.channels===void 0&&(e.s390.channels=[]);let a={};a.read=n("read_channel",t),a.write=n("write_channel",t),a.data=n("data_channel",t),e.s390.channels.push(a)}})},fillImport:function(e,i){const n=(t,a,o)=>u.setFormValue(R,i,t,a,o),r=R+"_read_channel_";e.s390==null||e.s390.channels==null||Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{let a=e.s390.channels.shift();console.log("test"),n("read_channel",t,a.read),n("write_channel",t,a.write),n("data_channel",t,a.data)})},countImport:function(e){return e.s390!=null&&e.s390.channels!=null?e.s390.channels.length:0}}};function ra(e,i,n,r,t,a){const o=b("FormKit");return m(),f(E,null,[l(o,{name:e.formKey("read_channel"),label:"Read I/O Subchannel",type:"text",validation:[["required"],["matches",/^([0-9a-fA-F]{1,4}\.){2}([0-9a-fA-F]{1,4})$/]],"validation-messages":{matches:"Channel number must be in the format ____.____.____"},"validation-visibility":"live",placeholder:"e.g. 0.0.800",help:"S390 subchannel definition"},null,8,["name","validation","validation-messages"]),l(o,{name:e.formKey("write_channel"),label:"Write I/O Subchannel",type:"text",validation:[["required"],["matches",/^([0-9a-fA-F]{1,4}\.){2}([0-9a-fA-F]{1,4})$/]],"validation-messages":{matches:"Channel number must be in the format ____.____.____"},"validation-visibility":"live",placeholder:"e.g. 0.0.801",help:"S390 subchannel definition"},null,8,["name","validation","validation-messages"]),l(o,{name:e.formKey("data_channel"),label:"Data I/O Subchannel",type:"text",validation:[["required"],["matches",/^([0-9a-fA-F]{1,4}\.){2}([0-9a-fA-F]{1,4})$/]],"validation-messages":{matches:"Channel number must be in the format ____.____.____"},"validation-visibility":"live",placeholder:"e.g. 0.0.802",help:"S390 subchannel definition"},null,8,["name","validation","validation-messages"])],64)}var _e=x(oa,[["render",ra]]);const Z="install_package",sa={setup:()=>{const e=u.uid();return{uid:e,formKey:i=>u.getFormKey(Z,i,e)}},methods:{encodeToInstallation:function(e,i){Object.keys(i).filter(n=>n.includes(Z)).forEach(n=>{i[n]&&(e.combustion+=`
zypper --non-interactive install `+u.normalizeZypperPackages(i[n]))})},encodeToExport:function(e,i){Object.keys(i).filter(n=>n.includes(Z)).forEach(n=>{e.package===void 0&&(e.package={}),e.package.install===void 0&&(e.package.install=[]),e.package.install.push(i[n])})},fillImport:function(e,i){e.package==null||e.package.install==null||Object.keys(i).filter(n=>n.includes(Z)).forEach(n=>{i[n]=e.package.install.shift()})},countImport:function(e){return e.package!=null&&e.package.install!=null?e.package.install.length:0}}};function la(e,i,n,r,t,a){const o=b("FormKit");return m(),W(o,{name:e.formKey("package_name"),label:"Packages you want to install (space or comma separated)",type:"text",validation:"required","validation-behavior":"live",value:"vim-small",help:"This will add a 'zypper --non-interactive install [packages]' line to the combustion script."},null,8,["name"])}var he=x(sa,[["render",la]]);const q="add_repository",ca={setup:()=>{const e=u.uid();return{uid:e,formKey:i=>u.getFormKey(q,i,e)}},methods:{encodeToInstallation:function(e,i){const n=(a,o)=>u.getFormValue(q,i,a,o);let r=0;const t=q+"_repository_name_";Object.keys(i).filter(a=>a.includes(t)).map(a=>a.replace(t,"")).forEach(a=>{r===0&&(e.combustion+=`
# Add repositories
`),r++,n("repository_url",a)&&n("repository_name",a)&&(e.combustion+="zypper addrepo --refresh "+n("repository_url",a)+' "'+n("repository_name",a)+`"
`)})},encodeToExport:function(e,i){const n=(t,a)=>u.getFormValue(q,i,t,a),r=q+"_repository_name_";Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{if(e.repository===void 0&&(e.repository={}),e.repository.repositories===void 0&&(e.repository.repositories=[]),n("repository_url",t)&&n("repository_name",t)){let a={};a.name=n("repository_name",t),a.url=n("repository_url",t),e.repository.repositories.push(a)}})},fillImport:function(e,i){const n=(t,a,o)=>u.setFormValue(q,i,t,a,o),r=q+"_repository_name_";e.repository==null||e.repository.repositories==null||Object.keys(i).filter(t=>t.includes(r)).map(t=>t.replace(r,"")).forEach(t=>{let a=e.repository.repositories.shift();n("repository_name",t,a.name),n("repository_url",t,a.url)})},countImport:function(e){return e.repository!=null&&e.repository.repositories!=null?e.repository.repositories.length:0}}};function ua(e,i,n,r,t,a){const o=b("FormKit");return m(),f(E,null,[l(o,{name:e.formKey("repository_name"),label:"Name",type:"text",validation:"required","validation-visibility":"live",help:"Alias name of the repository."},null,8,["name"]),l(o,{name:e.formKey("repository_url"),label:"URL",type:"text",validation:"required|url","validation-visibility":"live",help:"This will add a 'zypper addrepo --refresh <URL> <Name>' line to the combustion script."},null,8,["name"])],64)}var ge=x(ca,[["render",ua]]);const Q="comb_raw",da={setup:()=>{const e=u.uid();return{uid:e,formKey:i=>u.getFormKey(Q,i,e)}},methods:{encodeToInstallation:function(e,i){Object.keys(i).filter(n=>n.includes(Q)).forEach(n=>{i[n]!=null&&(e.combustion+=`
`+i[n])})},encodeToExport:function(e,i){Object.keys(i).filter(n=>n.includes(Q)).forEach(n=>{e.scripts===void 0&&(e.scripts=[]),i[n]!=null&&e.scripts.push(i[n])})},fillImport:function(e,i){e.scripts!=null&&Object.keys(i).filter(n=>n.includes(Q)).forEach(n=>{i[n]=e.scripts.shift()})},countImport:function(e){return e.scripts!=null?e.scripts.length:0}}},ma={class:"combustionraw"};function pa(e,i,n,r,t,a){const o=b("FormKit");return m(),f("div",ma,[l(o,{name:e.formKey("script_content"),label:"Lines to add",type:"textarea",validation:"required","validation-behavior":"live",value:'echo "hello combustion"',help:"You can find examples of a combustion script here: https://en.opensuse.org/Portal:MicroOS/Combustion#Simple_example"},null,8,["name"])])}var ye=x(da,[["render",pa]]);const fa={class:"page-section p-2 bg-dark",id:"edit"},_a={class:"container mt-5 px-0"},ha=c("div",{class:"row gx-4 gx-lg-5 justify-content-center"},[c("div",{class:"col-lg-8 col-xl-6 text-white text-center"},[c("h1",{class:"mt-5"},"Config Generator"),c("div",{class:"d-grid mb-5"},[c("img",{class:"text-center mx-auto w-50",src:bt})])])],-1),ga={class:"row gx-4 gx-lg-5 justify-content-center mb-5"},ya={class:"col-lg-6"},va={class:"form-floating mb-3"},ba=c("hr",{class:"divider-long"},null,-1),ka=c("hr",{class:"divider-long"},null,-1),Aa=c("hr",{class:"divider-long"},null,-1),wa=c("hr",{class:"divider-long"},null,-1),xa=c("hr",{class:"divider-long"},null,-1),$a={key:0},Ta={class:"page-section p-2",id:"export"},Fa={class:"container mt-5 px-0"},Ea={class:"row gx-4 gx-lg-5 justify-content-center"},Pa={class:"col-lg-8 col-xl-6"},Ka=c("h1",{class:"mt-5 text-center"},"config.ign",-1),Sa={class:"d-grid mb-5"},Va={class:"form-data"},Ia={class:"double"},Ca=P(" Copy "),Ma=c("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",fill:"currentColor",class:"bi bi-clipboard",viewBox:"0 0 16 16"},[c("path",{d:"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z"}),c("path",{d:"M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z"})],-1),Ua=[Ca,Ma],Ba={key:0},Oa=c("h1",{class:"mt-5 text-center"},"combustion script",-1),Na=c("hr",{class:"divider"},null,-1),za={class:"d-grid mb-5"},Ra={class:"form-data"},qa=c("hr",{class:"divider"},null,-1),La={class:"mt-5 text-center"},Ha=P(" Convert to Ignition-"),Ga={key:0},Da=P("Ready Filesystem IMG in the Browser "),Wa=j(`<div><h2 class="mt-5 text-center"> Convert to ISO Filesystem with mkisofs </h2><pre class="form-data">  Using ignition file only:
  # mkisofs -full-iso9660-filenames -o ignition.iso -V ignition -root ignition config.ign

  Using ignition and combustion configuration files:
  The files has to be stored under
   - fuel-ignition/combustion/script
   - fuel-ignition/ignition/config.ign
  # mkisofs -full-iso9660-filenames -o ignition.iso -V ignition fuel-ignition </pre><p> How to use the generated data with <a href="https://documentation.suse.com/sle-micro/6.0/html/Micro-deployment-raw-images/index.html#deployment-configuring-with-ignition" target="_blank">ignition</a> and <a href="https://documentation.suse.com/sle-micro/6.0/html/Micro-deployment-raw-images/index.html#deployment-configuring-with-combustion" target="_blank">combustion</a> . </p><hr class="divider"></div><h2 class="mt-5 text-center">Load Settings from</h2>`,2),Ja=c("h2",{class:"mt-5 text-center"},"Save Settings to",-1),Ya={setup(e){const i=[te,ne,ae,ie,re,oe,se,le,de,me,pe,fe,_e,ge,he,ye,ue,$e],n=w({debug:!1,save_to:"fuel-ignition.json"}),r=w({});i.forEach(h=>u.setupFormComponentWatcher(h,Ce,n));let t=w(0);const a=()=>{t.value+=1},o=h=>h.methods.hasOwnProperty("countImport")?h.methods.countImport(r.value):0;Me(()=>{Object.keys(r.value).length>0&&(i.filter(h=>h.methods.hasOwnProperty("fillImport")).forEach(h=>h.methods.fillImport(r.value,n.value)),r.value={})});const s=h=>{console.log("downloading.."),u.saveTemplateAsFile("config.ign",p(h))},_=h=>{u.copy(JSON.stringify(p(h),null,2))},p=h=>{let d={ignition:{version:"3.2.0"}};return i.filter(g=>g.methods.hasOwnProperty("encodeToInstallation")).forEach(g=>g.methods.encodeToInstallation(d,h)),h.debug&&(d["debug:form"]=h),d.combustion=void 0,d.combustion_initrd_and_running_system=void 0,d.combustion_initrd=void 0,d},A=h=>{let d={combustion:"",combustion_initrd:"",combustion_initrd_and_running_system:"",output:""};return i.filter(g=>g.methods.hasOwnProperty("encodeToInstallation")).forEach(g=>g.methods.encodeToInstallation(d,h)),d.combustion_initrd_and_running_system!=""||d.combustion_initrd!=""?(d.output==""&&(d.output=`#!/bin/bash
# combustion: network prepare
# script generated with https://opensuse.github.io/fuel-ignition/

`),d.combustion_initrd_and_running_system!=""&&(console.log("initrd and running system: "+d.combustion_initrd_and_running_system),d.output+=d.combustion_initrd_and_running_system+`
`),d.output+='if [ "${1-}" = "--prepare" ]; then\n',d.combustion_initrd!=""&&(console.log("initrd: "+d.combustion_initrd),d.output+=d.combustion_initrd+`
`),d.output+=`  exit 0
fi
`):d.output=`#!/bin/bash
# combustion: network
# script generated with https://opensuse.github.io/fuel-ignition/
`,d.output+=`
# Redirect output to the console
exec > >(exec tee -a /dev/tty0) 2>&1
`,d.combustion="",d.combustion_initrd_and_running_system="",d.combustion_initrd="",i.filter(g=>g.methods.hasOwnProperty("encodeToInstallation")).forEach(g=>g.methods.encodeToInstallation(d,h)),d.combustion!==""&&(console.log(d.combustion),d.output+=d.combustion),d.output+=`
# Leave a marker
echo "Configured with combustion" > /etc/issue.d/combustion`,d.output+=`

# Close outputs and wait for tee to finish.
exec 1>&- 2>&-; wait;`,d.output};async function v(h){let d=h.target.files[0];r.value=await u.parseJsonFile(d).catch(g=>{alert(g),u.clearFile()}),n.value={debug:n.value.debug,save_to:n.value.save_to},a()}const F=h=>{let d={};i.filter(g=>g.methods.hasOwnProperty("encodeToExport")).forEach(g=>g.methods.encodeToExport(d,h)),u.saveTemplateAsFile(h.save_to,d,!1)};return(h,d)=>{const g=b("FormKit");return m(),f("div",{key:D(t)},[c("section",fa,[c("div",_a,[ha,c("div",ga,[c("div",ya,[c("div",va,[l(g,{type:"group",modelValue:n.value,"onUpdate:modelValue":d[0]||(d[0]=$=>n.value=$)},{default:k(()=>[l(T,{title:"Add User",displaysAtBegin:o(te)},{default:k(({index:$})=>[l(te,{index:$},null,8,["index"])]),_:1},8,["displaysAtBegin"]),l(T,{title:"Set Hostname",displaysAtBegin:o(ae),maxComponents:1},{default:k(()=>[l(ae)]),_:1},8,["displaysAtBegin"]),ba,l(T,{title:"Set Language",displaysAtBegin:o(ie),maxComponents:1},{default:k(()=>[l(ie)]),_:1},8,["displaysAtBegin"]),l(T,{title:"Set Keyboard",displaysAtBegin:o(de),maxComponents:1},{default:k(()=>[l(de)]),_:1},8,["displaysAtBegin"]),l(T,{title:"Set Timezone",displaysAtBegin:o(me),maxComponents:1},{default:k(()=>[l(me)]),_:1},8,["displaysAtBegin"]),ka,l(T,{title:"Change Storage",displaysAtBegin:o(re)},{default:k(()=>[l(re)]),_:1},8,["displaysAtBegin"]),Aa,l(T,{title:"Add Network Interface",displaysAtBegin:o(oe)},{default:k(()=>[l(oe)]),_:1},8,["displaysAtBegin"]),l(T,{title:"Register Products",displaysAtBegin:o(pe)},{default:k(()=>[l(pe)]),_:1},8,["displaysAtBegin"]),l(T,{title:"Connect to Salt Master",maxComponents:1,displaysAtBegin:o(fe)},{default:k(()=>[l(fe)]),_:1},8,["displaysAtBegin"]),l(T,{title:"Set S390 Channels",displaysAtBegin:o(_e)},{default:k(()=>[l(_e)]),_:1},8,["displaysAtBegin"]),wa,l(T,{title:"Enable or Create Service",displaysAtBegin:o(se)},{default:k(()=>[l(se)]),_:1},8,["displaysAtBegin"]),l(T,{title:"Modify Existing Service",displaysAtBegin:o(le)},{default:k(()=>[l(le)]),_:1},8,["displaysAtBegin"]),xa,l(T,{title:"Adding Repository",displaysAtBegin:o(ge)},{default:k(()=>[l(ge)]),_:1},8,["displaysAtBegin"]),l(T,{title:"Install Additional Packages",displaysAtBegin:o(he)},{default:k(()=>[l(he)]),_:1},8,["displaysAtBegin"]),l(T,{title:"Add Files To System",displaysAtBegin:o(ne)},{default:k(()=>[l(ne)]),_:1},8,["displaysAtBegin"]),l(T,{title:"Add Custom Lines To Combustion Script",displaysAtBegin:o(ye)},{default:k(()=>[l(ye)]),_:1},8,["displaysAtBegin"]),n.value.debug?(m(),f("div",$a,[l(T,{title:"DEBUG: Add Bytes",displaysAtBegin:o(ue)},{default:k(()=>[l(ue)]),_:1},8,["displaysAtBegin"]),l(T,{title:"DEBUG: Analyze File",displaysAtBegin:1,maxComponents:1},{default:k(()=>[l($e)]),_:1})])):y("",!0)]),_:1},8,["modelValue"])])])])])]),c("section",Ta,[c("div",Fa,[c("div",Ea,[c("div",Pa,[Ka,c("div",Sa,[c("pre",Va,L(p(n.value)),1),c("div",Ia,[l(g,{modelValue:n.value.debug,"onUpdate:modelValue":d[1]||(d[1]=$=>n.value.debug=$),type:"checkbox",label:"Debug",name:"debug"},null,8,["modelValue"]),c("button",{class:"btn btn-outline-secondary mb-2",onClick:d[2]||(d[2]=$=>_(n.value))},Ua)]),c("button",{class:"btn btn-primary mb-4",onClick:d[3]||(d[3]=$=>s(n.value)),"data-testid":"download_ignition"}," Download "),A(n.value)!==void 0?(m(),f("div",Ba,[Oa,Na,c("div",za,[c("pre",Ra,L(A(n.value)),1),c("button",{class:"btn btn-primary mb-4","data-testid":"download_combustion",onClick:d[4]||(d[4]=$=>D(u).saveTemplateAsFile("script",A(n.value),!0))}," Download ")])])):y("",!0),c("div",null,[qa,c("h2",La,[Ha,A(n.value)!==void 0?(m(),f("span",Ga,"Combustion-")):y("",!0),Da]),l(ke,{ignJson:p(n.value),combustionScript:A(n.value)},null,8,["ignJson","combustionScript"])]),Wa,l(g,{name:"load_from",type:"file",onChange:v}),Ja,l(g,{modelValue:n.value.save_to,"onUpdate:modelValue":d[5]||(d[5]=$=>n.value.save_to=$),type:"text",name:"save_to"},null,8,["modelValue"]),c("button",{class:"btn btn-primary mt-3",onClick:d[6]||(d[6]=$=>F(n.value))}," Save ")])])])])])])}}};var Xa="/fuel-ignition/assets/undraw_convert_re_l0y1.2c99c673.svg";const Za={class:"page-section p-2 bg-dark",id:"edit"},Qa={class:"container mt-5 px-0"},ja=c("div",{class:"row gx-4 gx-lg-5 justify-content-center"},[c("div",{class:"col-lg-8 col-xl-6 text-white text-center"},[c("h1",{class:"mt-5"},"Convert JSON to Ignition-Ready IMG"),c("hr",{class:"divider"}),c("div",{class:"d-grid mb-5"},[c("img",{class:"text-center mx-auto w-25",src:Xa})])])],-1),ei={class:"row gx-4 gx-lg-5 justify-content-center mb-5"},ti={class:"col-lg-6 expandable-comp text-white"},ni={class:"form-floating mb-3"},ai=c("p",null,null,-1),ii=c("hr",{class:"divider"},null,-1),oi={class:"page-section p-2",id:"export"},ri={class:"container mt-5 px-0"},si={class:"row gx-4 gx-lg-5 justify-content-center"},li={class:"col-lg-8 col-xl-6"},ci=c("h1",{class:"mt-5 text-center"},"JSON That Will Be Converted",-1),ui=c("hr",{class:"divider"},null,-1),di={class:"d-grid mb-5"},mi={class:"form-data"},pi={setup(e){const i=w({}),n="The provided json is invalid.";let r=w({});function t(){return r}async function a(s){let _=s.target.files[0];_!==void 0&&await u.parseJsonFile(_).catch(p=>{alert(p),u.clearFile()}).then(p=>(r=p,i.value.convert_text=JSON.stringify(r,null,2),p))}const o=function(s){if(i.value.convert_file!==void 0){if(console.log("convert file defined"),!confirm("You already uploaded a file. Discard?")){i.value.convert_text=JSON.stringify(r,null,2);return}u.clearFile();try{r=JSON.parse(i.value.convert_text)}catch{alert(n)}}};return(s,_)=>{const p=b("FormKit");return m(),f(E,null,[c("section",Za,[c("div",Qa,[ja,c("div",ei,[c("div",ti,[l(p,{type:"group",modelValue:i.value,"onUpdate:modelValue":_[0]||(_[0]=A=>i.value=A)},{default:k(()=>[c("div",ni,[l(p,{name:"convert_file",label:"Either  -  Config.ign / Json File To Convert",type:"file",onChange:a}),ai,l(p,{name:"convert_text",label:"Or  -  JSON as Text",placeholder:'e.g. { "ignition": { "version": "3.2.0" } }',type:"textarea",id:"convert_text","validation-behavior":"live",onKeyup:o})])]),_:1},8,["modelValue"]),l(ke,{ignJson:t()},null,8,["ignJson"])])])]),ii]),c("section",oi,[c("div",ri,[c("div",si,[c("div",li,[ci,ui,c("div",di,[c("pre",mi,L(t()),1)])])])])])],64)}}};var Te="/fuel-ignition/assets/undraw_freelancer_re_irh4.f098216d.svg";const fi={},_i={class:"page-section bg-dark",id:"import"},hi={class:"container px-4 px-lg-5"},gi={class:"row gx-4 gx-lg-5 justify-content-center"},yi=c("div",{class:"d-grid"},[c("img",{class:"text-center mx-auto",src:Te})],-1),vi={class:"col-lg-8 col-xl-6 text-white text-center"},bi=c("h2",{class:"mt-2"},"Sorry, this is not implemented yet!",-1),ki=c("hr",{class:"divider"},null,-1),Ai=c("p",{class:"mb-5"}," For now, Fuel Ignition can only create new configs. ",-1),wi=P("Back Home");function xi(e,i){const n=b("router-link");return m(),f("section",_i,[c("div",hi,[c("div",gi,[yi,c("div",vi,[bi,ki,Ai,l(n,{class:"btn btn-primary btn-xl",to:"/"},{default:k(()=>[wi]),_:1})])])])])}var $i=x(fi,[["render",xi]]);const Ti=c("section",{class:"page-section bg-dark",id:"contact"},[c("div",{class:"container px-4 px-lg-5"},[c("div",{class:"row gx-4 gx-lg-5 justify-content-center"},[c("div",{class:"d-grid"},[c("img",{class:"text-center mx-auto",src:Te})])])])],-1),Fi=c("section",{class:"page-section p-2",id:"export"},[c("div",{class:"container mt-5 px-0"},[c("div",{class:"row gx-4 gx-lg-5 justify-content-center"},[c("h2",{class:"mt-5 text-center"},"Convert to ISO in the Browser (Alpha)"),c("hr",{class:"divider"}),c("div",{class:"d-grid mb-5"},[c("div",{class:"mx-auto"})])])])],-1),Ei={setup(e){return(i,n)=>(m(),f(E,null,[Ti,Fi],64))}},Pi="/fuel-ignition/",Ki=[{path:"/",name:"Home",component:vt},{path:"/edit",name:"Edit",component:Ya},{path:"/import",name:"Import",component:$i},{path:"/convert",name:"Convert",component:pi},{path:"/test",name:"Test",component:Ei}],Si=Ue({history:Be(Pi),routes:Ki});window.addEventListener("DOMContentLoaded",e=>{var i=function(){const t=document.body.querySelector("#mainNav");!t||(window.scrollY===0?t.classList.remove("navbar-shrink"):t.classList.add("navbar-shrink"))};i(),document.addEventListener("scroll",i);const n=document.body.querySelector(".navbar-toggler");[].slice.call(document.querySelectorAll("#navbarResponsive .nav-link")).map(function(t){t.addEventListener("click",()=>{window.getComputedStyle(n).display!=="none"&&n.click()})})});Oe(it).use(Ne,ze).use(Si).mount("#app");
